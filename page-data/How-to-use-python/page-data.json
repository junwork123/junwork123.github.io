{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/How-to-use-python/",
    "result": {"data":{"cur":{"id":"f55fd0fb-ad38-5618-b49c-866183c16503","html":"<p>파이썬 문법 및 유용한 코드를 모아놓은 곳입니다.</p>\n<h2 id=\"index\" style=\"position:relative;\"><a href=\"#index\" aria-label=\"index permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>INDEX</h2>\n<p><a href=\"#string\">1. 문자열 관련 메소드</a></p>\n<p><a href=\"#list\">2. 리스트 관련 메소드</a></p>\n<p><a href=\"#re\">3. 정규표현식(re모듈)</a></p>\n<p><a href=\"#compre\">4. List Comprehention</a></p>\n<p><a href=\"#useful\">5. 유용한 함수</a></p>\n<p><br/><br/></p>\n<hr>\n<h3 id=\"문자열-관련-메소드span-idstringspan\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%9E%90%EC%97%B4-%EA%B4%80%EB%A0%A8-%EB%A9%94%EC%86%8C%EB%93%9Cspan-idstringspan\" aria-label=\"문자열 관련 메소드span idstringspan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문자열 관련 메소드<span id=\"string\"></span></h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 문자열 뒤집기</span>\ns <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 문자열 교체(공백 or 특정문자제거)</span>\ns <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">import</span> re\ns <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>sub<span class=\"token punctuation\">(</span><span class=\"token string\">r'[^a-zA-Z0-9]'</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 문자열 나눔</span>\ns <span class=\"token operator\">=</span> <span class=\"token string\">'h e l l o'</span>\ns<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'h'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'l'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'l'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'o'</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span>char <span class=\"token keyword\">for</span> char <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 문자열 연결</span>\n<span class=\"token builtin\">list</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'h'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'l'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'l'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'o'</span><span class=\"token punctuation\">]</span>\n<span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">=</span> hello\n\n<span class=\"token comment\"># 문자열 판단</span>\n<span class=\"token string\">'year2017'</span><span class=\"token punctuation\">.</span>isalnum<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n\n<span class=\"token string\">'year2017!!!'</span><span class=\"token punctuation\">.</span>isalnum<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n\n<span class=\"token comment\"># 문자열 길이</span>\n<span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n\n<span class=\"token comment\"># 문자열 검색</span>\n<span class=\"token string\">'hello'</span><span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'l'</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n\n<span class=\"token comment\"># find와 동일, 없을 때 예외를 발생</span>\n<span class=\"token string\">'hello'</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">'l'</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n\n<span class=\"token string\">'l'</span> <span class=\"token keyword\">in</span> <span class=\"token string\">'hello'</span>\n<span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n\n<span class=\"token string\">'l'</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> <span class=\"token string\">'hello'</span>\n<span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></code></pre></div>\n<p><br/><br/></p>\n<hr>\n<h3 id=\"리스트-관련-함수span-idlistspan\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EA%B4%80%EB%A0%A8-%ED%95%A8%EC%88%98span-idlistspan\" aria-label=\"리스트 관련 함수span idlistspan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리스트 관련 함수<span id=\"list\"></span></h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 알파벳 생성하기</span>\n<span class=\"token keyword\">from</span> string <span class=\"token keyword\">import</span> ascii_lowercase\n<span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">.</span>ascii_lowercase<span class=\"token punctuation\">)</span>\n\n<span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">97</span><span class=\"token punctuation\">,</span> <span class=\"token number\">123</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'z'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n\n<span class=\"token comment\"># 리스트 뒤집기</span>\nl<span class=\"token punctuation\">.</span>reverse<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># List Comprehensions 방식으로 생성하기</span>\nl <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>i <span class=\"token operator\">*</span> i <span class=\"token keyword\">for</span> <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span>\nl <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> L <span class=\"token keyword\">if</span> i <span class=\"token operator\">%</span> <span class=\"token number\">3</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 2차원 배열 동적 생성(다익스트라)</span>\ngraph <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> y <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> items <span class=\"token keyword\">in</span> lists<span class=\"token punctuation\">:</span>\n    graph<span class=\"token punctuation\">[</span>items<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>items<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> items<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 리스트 안에 값 확인</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span> <span class=\"token keyword\">in</span> l<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> l<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 리스트 값 추가</span>\nl<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 값 추가</span>\n\nl<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 값 추가</span>\n\nl<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span>iterable<span class=\"token punctuation\">)</span> <span class=\"token comment\"># iterable 인자를 넘겨 리스트에 추가</span>\nl<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">13</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 10~12까지</span>\n\n<span class=\"token comment\"># 리스트 값 삭제</span>\n<span class=\"token keyword\">del</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 특정 인덱스 삭제</span>\n\n<span class=\"token keyword\">del</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 리스트 자체 삭제</span>\n\nl<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 특정 인덱스 위치의 값을 리턴하면서 삭제</span>\n\nl<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 전달한 값을 삭제</span>\n\nl<span class=\"token punctuation\">.</span>clear<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 리스트 값 모두 삭제(빈 리스트 생성)</span>\n\n<span class=\"token comment\"># 리스트 정렬</span>\nl<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 오름차순 정렬</span>\nl<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span>reverse<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 내림차순 정렬</span>\n\n<span class=\"token comment\"># 리스트 길이</span>\n<span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 리스트 슬라이싱</span>\nl<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 리스트에서 짝수번째만 가져옴</span>\n<span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 리스트 정렬 후 짝수번째만 합치기</span>\n\n<span class=\"token comment\"># 리스트 문자열 합치기</span>\nA <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">]</span>\nl <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 리스트 내부 정렬</span>\n<span class=\"token comment\"># 띄어쓰기 기준으로 나눈 뒤 사전식 정렬, 같을 경우 맨 앞 기준 정렬</span>\nl<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span>key<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> x <span class=\"token punctuation\">:</span> l<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># defaultDict를 탐색할 때</span>\n<span class=\"token comment\"># list()로 감싸줘야 key size changed 에러 발생 방지</span>\n<span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>newDict<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\">#----</span></code></pre></div>\n<p><br/><br/></p>\n<hr>\n<h3 id=\"정규표현식re모듈span-idrespan\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9Dre%EB%AA%A8%EB%93%88span-idrespan\" aria-label=\"정규표현식re모듈span idrespan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정규표현식(re모듈)<span id=\"re\"></span></h3>\n<ul>\n<li>주요 메소드</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> re\n\n<span class=\"token comment\"># 특수문자 제거</span>\ns <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>sub<span class=\"token punctuation\">(</span><span class=\"token string\">r\"[^a-zA-Z0-9]\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 동일한 구문을 많이 써야하는 경우 정규식 객체를 반환</span>\nc <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[0-9]'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 문자열 전체에서 검색</span>\nre<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'[a-z]'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'123abc45'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">=</span> <span class=\"token number\">3</span>\nre<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'[a-z]'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'123abc45'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">=</span> <span class=\"token number\">4</span>\n\nre<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'[a-z]+'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'123abc45'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">=</span> <span class=\"token number\">3</span>\nre<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'[a-z]+'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'123abc45'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">=</span> <span class=\"token number\">6</span>\n\n<span class=\"token comment\"># 문자열 전체에서 일치하는 모든 부분을 검색</span>\nre<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">'[a-z]'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'123abc45'</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span>\nre<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">'[a-z]+'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'123abc45'</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'abc'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<br/>\n<ul>\n<li>자주 쓰이는 예시</li>\n</ul>\n<p>[Pp]ython : Python 혹은 python</p>\n<p>[^aeiou] : 소문자 모음 제외</p>\n<p>^abc : abc로 시작해야함</p>\n<p>xyz$ : xyz로 종료되어야함</p>\n<p>\\d{3} : 숫자가 3개 있어야 함</p>\n<p>\\d+ : 숫자가 1개 이상</p>\n<p>\\d? : 숫자가 1개던지 없던지</p>\n<ul>\n<li>반복횟수</li>\n</ul>\n<p>* : 0회 이상 반복</p>\n<p>+ : 1회 이상 반복</p>\n<p>? : 0회 or 1회</p>\n<p>{m} : m회 반복</p>\n<p>{m,n} : m회에서 n회까지 반복</p>\n<ul>\n<li>매칭조건\n. : 줄바꿈 문자를 제외한 모든 문자와 매치됨</li>\n</ul>\n<p>^ : 문자열의 시작과 매치</p>\n<p>$ : 문자열의 마지막과 매치</p>\n<p>[] : 문자 집합 중 하나 <em>ex : [0-9]</em></p>\n<p>| : 또는(or)을 의미</p>\n<p>{} : 정규식을 그룹으로 묶음</p>\n<ul>\n<li>이스케이프 기호\n\\ : 역슬래쉬 문자 자체</li>\n</ul>\n<p>\\d : 모든 숫자 [0-9]</p>\n<p>\\D : 숫자가 아닌 문자 [^0-9]</p>\n<p>\\w : 숫자 또는 문자와 매치됨</p>\n<p>\\W : 숫자 또는 문자가 아닌 것과 매치됨</p>\n<p>\\b : 단어(숫자, 영문자의 연속)의 경계</p>\n<p>\\B : 단어(숫자, 영문자의 연속)의 경계가 아닌 것</p>\n<blockquote>\n<p><em>ex : Raindrops on roses, and whiskers on kittens.</em></p>\n<p>위 문장에서 단어의 경계, 즉 메타 문자 \\b 는 아래와 같이 | 를 표시한 위치를 가리킨다.</p>\n<p>|Raindrops| |on| |roses|, |and| |whiskers| |on| |kittens|.</p>\n<p>이 문장에서 /\\bo.\\b/ 를 매치시킨 결과는 다음과 같다.</p>\n<p>|Raindrops| <em><strong>|on|</strong></em> |roses|, |and| |whiskers| <em><strong>|on|</strong></em> |kittens|.</p>\n<p>패턴이 단어의 경계 사이에 있는 o와 나머지 한 문자를 나타내기 때문이다.</p>\n<p>\\B 는 \\b와 반대로 동작하는데, 이것도 각 위치를 표시해보면 이해하기 쉽다.</p>\n<p>R|a|i|n|d|r <em><strong>|o|p|</strong></em> s o|n r| <em><strong>o|s|</strong></em> e|s, a|n|d w|h|i|s|k|e|r|s o|n k|i|t|t|e|n|s.</p>\n</blockquote>\n<p>\\A : 문자열의 처음에만 일치</p>\n<p>\\Z : 문자열의 끝에만 일치</p>\n<p>\\s : 공백문자 [\\t\\n\\r\\f\\v]</p>\n<p>\\S : 공백문자가 아닌 것 [^\\t\\n\\r\\f\\v]</p>\n<ul>\n<li>플래그\nX, VERBOSE : 정규식 안의 공백을 무시</li>\n</ul>\n<p>I, IGNORECATE : 대소문자를 구별하지 않는다.</p>\n<h3 id=\"list-comprehentionspan-idcomprespan\" style=\"position:relative;\"><a href=\"#list-comprehentionspan-idcomprespan\" aria-label=\"list comprehentionspan idcomprespan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>List Comprehention<span id=\"compre\"></span></h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">\nstring1 <span class=\"token operator\">=</span> <span class=\"token string\">'abc'</span>\nstring2 <span class=\"token operator\">=</span> <span class=\"token string\">'acc'</span>\n\n<span class=\"token comment\"># 문자열에서 한글자씩 뽑아서 출력</span>\nchar <span class=\"token keyword\">for</span> char <span class=\"token keyword\">in</span> string\n<span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 문자열1에 있는 글자가 2에 있는지 출력</span>\nchar <span class=\"token keyword\">in</span> string2 <span class=\"token keyword\">for</span> char <span class=\"token keyword\">in</span> string\n<span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 문자열1에 있는 글자가 2에 몇개나 있는지 출력</span>\n<span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>char <span class=\"token keyword\">in</span> string2 <span class=\"token keyword\">for</span> char <span class=\"token keyword\">in</span> string<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">=</span> <span class=\"token number\">2</span></code></pre></div>\n<p><br/><br/></p>\n<hr>\n<h3 id=\"유용한-함수span-idusefulspan\" style=\"position:relative;\"><a href=\"#%EC%9C%A0%EC%9A%A9%ED%95%9C-%ED%95%A8%EC%88%98span-idusefulspan\" aria-label=\"유용한 함수span idusefulspan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>유용한 함수<span id=\"useful\"></span></h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 프로그래머스 로그 찍기</span>\n<span class=\"token keyword\">import</span> logging\nlogging<span class=\"token punctuation\">.</span>warning<span class=\"token punctuation\">(</span><span class=\"token string\">'tempList : {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>tempList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># zip() = 두 개 이상의 시퀀스를 하나로 묶어서 튜플로 반환</span>\n<span class=\"token comment\"># zip은 제너레이터를 반환하므로 출력 시 list(zip(x,y))형태로 사용</span>\n\nx <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\ny <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">]</span>\nz <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>ㄱ<span class=\"token punctuation\">,</span>ㄴ<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># zip 개별 접근 및 튜플 반환 확인</span>\nd <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\nd<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">)</span>\n\nd<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\nd<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 하나 묶기</span>\n<span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 3개 묶기</span>\n<span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>ㄱ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>ㄴ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># ---------------------------------------</span>\n\n<span class=\"token comment\"># 아스테리스크(*) : 시퀀스 언패킹 연산자</span>\nfruit <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>apple<span class=\"token punctuation\">,</span> tomato<span class=\"token punctuation\">,</span> banana<span class=\"token punctuation\">]</span>\n<span class=\"token operator\">*</span>fruit <span class=\"token operator\">=</span> apple<span class=\"token punctuation\">,</span> tomato<span class=\"token punctuation\">,</span> banana\n\n<span class=\"token comment\"># 앞의 파라미터 갯수만큼 넣고 나머지는 언패킹하여 b에 넣음</span>\na<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>c <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 아스테리스크 2개(**)는 사전(Dictionary)과 같은 키/값 페어 연산에서 사용</span>\ninfo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'year'</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">2014</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'month'</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'day'</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">25</span><span class=\"token punctuation\">}</span>\nnewInfo1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'year'</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">2021</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>info<span class=\"token punctuation\">}</span>\nnewInfo2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">**</span>info<span class=\"token punctuation\">,</span> <span class=\"token string\">'month'</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'day'</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">25</span><span class=\"token punctuation\">}</span>\n\n</code></pre></div>\n<p><br/><br/></p>\n<hr>\n<h3 id=\"파싱-라이브러리-beautifulsoup4bs4span-idbs4span\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%8B%B1-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-beautifulsoup4bs4span-idbs4span\" aria-label=\"파싱 라이브러리 beautifulsoup4bs4span idbs4span permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파싱 라이브러리 BeautifulSoup4(bs4)<span id=\"bs4\"></span></h3>\n<p>아래 코드는 크롤링한 데이터를 Python파일와 같은 위치에 result.json을 만들어 저장하는 예제.(이준범님 코드)</p>\n<p>내가 직접 만든 크롤러는 <a href=\"https://github.com/MaliciousJ/NewsCrawler\">NewsCralwer</a>를 참고하자.</p>\n<p>여러 특성(제목, 날짜, 키워드분류 등)에 대한 분류가 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># parser.py</span>\n<span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">from</span> bs4 <span class=\"token keyword\">import</span> BeautifulSoup\n<span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">import</span> os\n\n<span class=\"token comment\"># python파일의 위치</span>\nBASE_DIR <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>abspath<span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nreq <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://beomi.github.io/beomi.github.io_old/'</span><span class=\"token punctuation\">)</span>\nhtml <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>text\nsoup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">,</span> <span class=\"token string\">'html.parser'</span><span class=\"token punctuation\">)</span>\nmy_titles <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>select<span class=\"token punctuation\">(</span>\n    <span class=\"token string\">'h3 > a'</span>\n    <span class=\"token punctuation\">)</span>\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">for</span> title <span class=\"token keyword\">in</span> my_titles<span class=\"token punctuation\">:</span>\n    data<span class=\"token punctuation\">[</span>title<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> title<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'href'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>BASE_DIR<span class=\"token punctuation\">,</span> <span class=\"token string\">'result.json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w+'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> json_file<span class=\"token punctuation\">:</span>\n    json<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> json_file<span class=\"token punctuation\">)</span></code></pre></div>\n<p><br/><br/></p>\n<hr>\n<p><em>참고자료</em></p>\n<p><em>1. <a href=\"https://devanix.tistory.com/296\">파이썬 - 정규표현식 모듈</a></em></p>\n<p><em>2. <a href=\"https://withcoding.com/74\">파이썬 str 문자열 객체 메소드 함수 정리</a></em></p>\n<p><em>3. <a href=\"https://greeksharifa.github.io/%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D(re)/2018/07/20/regex-usage-01-basic/\">파이썬 정규표현식(re) 사용법</a></em></p>\n<p><em>4. <a href=\"https://ohgyun.com/392\">정규식 단어 경계 메타 문자의 정확한 이해</a></em></p>\n<p><em>5. <a href=\"https://beomi.github.io/2017/01/20/HowToMakeWebCrawler/\">나만의 웹 크롤러 만들기 with Requests/BeautifulSoup</a></em></p>\n<p><em>6. <a href=\"https://withcoding.com/75\">파이썬 list 리스트 사용법 정리 (삽입, 삭제, 정렬)</a></em></p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#index\">INDEX</a></p>\n<ul>\n<li><a href=\"#%EB%AC%B8%EC%9E%90%EC%97%B4-%EA%B4%80%EB%A0%A8-%EB%A9%94%EC%86%8C%EB%93%9Cspan-idstringspan\">문자열 관련 메소드<span id=\"string\"></span></a></li>\n<li><a href=\"#%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EA%B4%80%EB%A0%A8-%ED%95%A8%EC%88%98span-idlistspan\">리스트 관련 함수<span id=\"list\"></span></a></li>\n<li><a href=\"#%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9Dre%EB%AA%A8%EB%93%88span-idrespan\">정규표현식(re모듈)<span id=\"re\"></span></a></li>\n<li><a href=\"#list-comprehentionspan-idcomprespan\">List Comprehention<span id=\"compre\"></span></a></li>\n<li><a href=\"#%EC%9C%A0%EC%9A%A9%ED%95%9C-%ED%95%A8%EC%88%98span-idusefulspan\">유용한 함수<span id=\"useful\"></span></a></li>\n<li><a href=\"#%ED%8C%8C%EC%8B%B1-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-beautifulsoup4bs4span-idbs4span\">파싱 라이브러리 BeautifulSoup4(bs4)<span id=\"bs4\"></span></a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"파이썬 문법 및 유용한 코드를 모아놓은 곳입니다. INDEX 1. 문자열 관련 메소드 2. 리스트 관련 메소드 3. 정규표현식(re모듈) 4. List Comprehention 5. 유용한 함수  문자열 관련 메소드  리스트 관련 함수  정규표현식(re모듈) 주요 메소드 자주 쓰이는 예시 [Pp]ython : Python 혹은 python [^aeiou] : 소문자 모음 제외 ^abc : abc로 시작해야함 xyz$ : xyz로 종료되어야함 \\d{3} : 숫자가 3개 있어야 함 \\d+ : 숫자가 1개 이상 \\d? : 숫자가 1개던지 없던지 반복횟수 * : 0회 이상 반복 + : 1회 이상 반복 ? : 0회 or 1회 {m} : m회 반복 {m,n} : m회에서 n회까지 반복 매칭조건\n. : 줄바꿈 문자를 제외한 모든 문자와 매치됨 ^ : 문자열의 시작과 매치 $ : 문자열의 마지막과 매치 [] : 문자 집합 중 하나 ex : [0-9] | : 또는(or)을 의미 {} : 정규식을 …","frontmatter":{"date":"August 13, 2022","title":"파이썬(Python) 문법 정리","categories":"how-to","author":"주녁","emoji":"🔮"},"fields":{"slug":"/How-to-use-python/"}},"next":{"id":"a4a8d61f-4a99-52bc-ad48-fc0c1834eb7e","html":"<h2 id=\"visual-studio-codevscode-사용법-정리\" style=\"position:relative;\"><a href=\"#visual-studio-codevscode-%EC%82%AC%EC%9A%A9%EB%B2%95-%EC%A0%95%EB%A6%AC\" aria-label=\"visual studio codevscode 사용법 정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Visual Studio Code(vscode) 사용법 정리</h2>\n<ul>\n<li>\n<p>Ctrl + k + F : 코드 정렬 하기</p>\n</li>\n<li>\n<p>Ctrl + c : 커서의 위치에서 드래그 없이 그냥 Ctrl +c 하면 한줄 복사</p>\n</li>\n<li>\n<p>Shift + Alt + ↑ : 위에 행 복사</p>\n</li>\n<li>\n<p>Shift + Alt + ↓ : 아래 행 복사</p>\n</li>\n<li>\n<p>Ctrl + d : 단어를 드래그 하고 계속 눌러주면 해당 글자는 선택이 계속 된다.</p>\n</li>\n<li>\n<p>Ctrl + Shift + t : 닫은 창 다시 열기</p>\n</li>\n<li>\n<p>Ctrl + / : 창 분할</p>\n</li>\n<li>\n<p>Ctrl + 1,2,3,4… : 창 포커싱</p>\n</li>\n<li>\n<p>Ctrl + k, s = 키보드 숏컷(단축키) 보기</p>\n</li>\n<li>\n<p>Ctrl + b / Ctrl + j : 화면 넓게 보기</p>\n</li>\n<li>\n<p>Ctrl + g : 특정 줄 번호로 이동</p>\n</li>\n<li>\n<p>Ctrl + h : 텍스트 찾아 바꾸기</p>\n</li>\n<li>\n<p>Ctrl + pageup/down : 탭 간 이동</p>\n</li>\n<li>\n<p>Ctrl + Shift + p : 파일, 명령어 등 호출</p>\n</li>\n<li>\n<p>Alt + left/right : 이전 작업부분으로 이동</p>\n</li>\n<li>\n<p>Alt + f12 : 정의문 팝업</p>\n</li>\n<li>\n<p>F12 : 정의문 이동</p>\n</li>\n<li>\n<p>Ctrl + f12 : 구현으로 이동</p>\n</li>\n<li>\n<p>F8 : 현재 파일에서 오류찾기</p>\n</li>\n<li>\n<p>F9 : 중단점 설정</p>\n</li>\n<li>\n<p>F10 : 디버깅 한줄씩 실행 (함수를 만나면 들어가지 않음)</p>\n</li>\n<li>\n<p>F11 : 디버깅 한줄씩 실행 (함수를 만나면 들어감)</p>\n</li>\n<li>\n<p>Shift + F11 : 디버깅 중인 현재 함수 빠져나오기</p>\n</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#visual-studio-codevscode-%EC%82%AC%EC%9A%A9%EB%B2%95-%EC%A0%95%EB%A6%AC\">Visual Studio Code(vscode) 사용법 정리</a></li>\n</ul>\n</div>","frontmatter":{"date":"August 13, 2022","title":"Visual Studio Code(vscode) 사용법 정리","categories":"how-to","author":"주녁","emoji":"🔮"},"fields":{"slug":"/How-to-use-vscode/"}},"prev":{"id":"486b66b5-c1ee-5b33-bb9b-684ff7ee149b","html":"<p>지적과 댓글은 언제나 환영합니다!</p>\n<h2 id=\"thymeleaf-사용법-정리\" style=\"position:relative;\"><a href=\"#thymeleaf-%EC%82%AC%EC%9A%A9%EB%B2%95-%EC%A0%95%EB%A6%AC\" aria-label=\"thymeleaf 사용법 정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>thymeleaf 사용법 정리</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 간단한 표현</span>\n◦ 변수 표현식<span class=\"token operator\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span>\n\n◦ 선택 변수 표현식<span class=\"token operator\">:</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span>\n\n◦ 메시지 표현식<span class=\"token operator\">:</span> #<span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span>\n\n◦ 링크 <span class=\"token constant\">URL</span> <span class=\"token literal-property property\">표현식</span><span class=\"token operator\">:</span> @<span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span>\n\n◦ 조각 표현식<span class=\"token operator\">:</span> <span class=\"token operator\">~</span><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 리터럴</span>\n◦ 텍스트<span class=\"token operator\">:</span> <span class=\"token string\">'one text'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Another one!'</span><span class=\"token punctuation\">,</span>…\n\n◦ 숫자<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12.3</span><span class=\"token punctuation\">,</span>…\n\n◦ 불린<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span>\n\n◦ 널<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span>\n\n◦ 리터럴 토큰<span class=\"token operator\">:</span> one<span class=\"token punctuation\">,</span> sometext<span class=\"token punctuation\">,</span> main<span class=\"token punctuation\">,</span>…\n\n<span class=\"token comment\">// 문자 연산:</span>\n◦ 문자 합치기<span class=\"token operator\">:</span> <span class=\"token operator\">+</span>\n\n◦ 리터럴 대체<span class=\"token operator\">:</span> <span class=\"token operator\">|</span>The name is $<span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">|</span>\n\n<span class=\"token comment\">// 산술 연산:</span>\n◦ Binary operators<span class=\"token operator\">:</span> <span class=\"token operator\">+</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">/</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">%</span>\n\n◦ Minus <span class=\"token function\">sign</span> <span class=\"token punctuation\">(</span>unary operator<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span>\n\n<span class=\"token comment\">// 불린 연산:</span>\n◦ Binary operators<span class=\"token operator\">:</span> and<span class=\"token punctuation\">,</span> or\n\n◦ Boolean <span class=\"token function\">negation</span> <span class=\"token punctuation\">(</span>unary operator<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">,</span> not\n\n<span class=\"token comment\">// 비교와 동등:</span>\n◦ 비교<span class=\"token operator\">:</span> <span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">>=</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&lt;=</span> <span class=\"token punctuation\">(</span>gt<span class=\"token punctuation\">,</span> lt<span class=\"token punctuation\">,</span> ge<span class=\"token punctuation\">,</span> le<span class=\"token punctuation\">)</span>\n\n◦ 동등 연산<span class=\"token operator\">:</span> <span class=\"token operator\">==</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">!=</span> <span class=\"token punctuation\">(</span>eq<span class=\"token punctuation\">,</span> ne<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 조건 연산:</span>\n◦ If<span class=\"token operator\">-</span>then<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>then<span class=\"token punctuation\">)</span>\n\n◦ If<span class=\"token operator\">-</span>then<span class=\"token operator\">-</span><span class=\"token keyword\">else</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>then<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">)</span>\n\n◦ Default<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>defaultvalue<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 특별한 토큰:</span>\n◦ No<span class=\"token operator\">-</span>Operation<span class=\"token operator\">:</span> _\n</code></pre></div>\n<p><em>출처</em></p>\n<p><em><a href=\"https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81-mvc-1#\">인프런 스프링 MVC 강의 1편</a></em></p>\n<p><em><a href=\"https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81-%ED%95%B5%EC%8B%AC-%EC%9B%90%EB%A6%AC-%EA%B8%B0%EB%B3%B8%ED%8E%B8/\">인프런 스프링 핵심 원리 기본편</a></em></p>\n<br/>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#thymeleaf-%EC%82%AC%EC%9A%A9%EB%B2%95-%EC%A0%95%EB%A6%AC\">thymeleaf 사용법 정리</a></li>\n</ul>\n</div>","frontmatter":{"date":"August 21, 2022","title":"타임리프(thymeleaf) 사용법 정리","categories":"how-to","author":"주녁","emoji":"🔮"},"fields":{"slug":"/How-to-use-thymeleaf/"}},"site":{"siteMetadata":{"siteUrl":"https://www.junwork.net","comments":{"utterances":{"repo":"junwork123/blog-comments"}}}}},"pageContext":{"slug":"/How-to-use-python/","nextSlug":"/How-to-use-vscode/","prevSlug":"/How-to-use-thymeleaf/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}