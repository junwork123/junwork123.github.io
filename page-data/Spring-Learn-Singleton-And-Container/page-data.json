{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/Spring-Learn-Singleton-And-Container/",
    "result": {"data":{"cur":{"id":"7c3c2b18-9c56-5986-84ac-89e66b59ecba","html":"<p>지적과 댓글은 언제나 환영합니다!</p>\n<br/>\n<hr>\n<h2 id=\"싱글톤-패턴\" style=\"position:relative;\"><a href=\"#%EC%8B%B1%EA%B8%80%ED%86%A4-%ED%8C%A8%ED%84%B4\" aria-label=\"싱글톤 패턴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>싱글톤 패턴</strong></h2>\n<br/>\n<p>클래스의 인스턴스가 딱 1개만 생성되는 것을 보장하는 디자인 패턴이다.</p>\n<p>해당되는 인스턴스에 대해서 private 생성자를 사용해</p>\n<p>최초 1번만 static 인스턴스를 생성하는 디자인 패턴이다.</p>\n<br/>\n<p>이러한 싱글톤 패턴은 내부 설계를 변경하거나 초기화하기가 어렵다.</p>\n<p>또한, private 생성자를 사용하기 때문에 자식 클래스를 만들기 어렵다.</p>\n<p>즉, 많이 사용할수록 유연하지 않은 설계가 된다.</p>\n<br/>\n<hr>\n<h2 id=\"스프링-컨테이너\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88\" aria-label=\"스프링 컨테이너 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>스프링 컨테이너</strong></h2>\n<br/>\n<p>이를 해결하기 위해 등장한 것이 스프링 컨테이너이다.</p>\n<p>싱글톤 패턴을 적용하지 않아도, 객체 인스턴스를 싱글톤으로 관리한다.</p>\n<p>스프링은 객체를 <code class=\"language-text\">프록시(Proxy) 객체</code>로 복사해서</p>\n<p><code class=\"language-text\">Spring Bean</code> 객체로 다시 만든다.</p>\n<p>그리고 이를 <code class=\"language-text\">Spring Bean</code>으로 등록할 수 있게 해준다.</p>\n<p>이 때 사용하는 라이브러리가 CGLIB이다.</p>\n<p>이 CGLIB 덕분에 바이트 코드 조작이 가능해져서,</p>\n<p>Spring에서 객체를 출력할 때, <code class=\"language-text\">AppConfig$$EnhancerBySpringCGLIB</code> 과 같은 문구가 붙은 것이다.</p>\n<br/>\n<p>결과적으로, 스프링 컨테이너는 싱글톤 패턴의 문제점을 해결하면서,</p>\n<p>객체 인스턴스를 싱글톤(1개만 생성)으로 관리한다.</p>\n<br/>\n<hr>\n<h2 id=\"싱글톤-패턴의-주의점\" style=\"position:relative;\"><a href=\"#%EC%8B%B1%EA%B8%80%ED%86%A4-%ED%8C%A8%ED%84%B4%EC%9D%98-%EC%A3%BC%EC%9D%98%EC%A0%90\" aria-label=\"싱글톤 패턴의 주의점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>싱글톤 패턴의 주의점</strong></h2>\n<br/>\n<p>싱글톤 패턴 또는 싱글톤 컨테이너든</p>\n<p>객체 인스턴스를 하나만 생성해서 사용하는 방식의 경우</p>\n<p>여러 클라이언트가 하나의 객체를 공유하기 때문에</p>\n<p>해당 객체를 상태를 유지시키는 구조로 설계해서는 안된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">StatefulService</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> price<span class=\"token punctuation\">;</span> <span class=\"token comment\">//상태를 유지하는 필드</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">order</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> price<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name = \"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">\" price = \"</span> <span class=\"token operator\">+</span> price<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>price <span class=\"token operator\">=</span> price<span class=\"token punctuation\">;</span> <span class=\"token comment\">//여기가 문제!</span>\n    <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getPrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> price<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> \n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><br/><br/></p>\n<p><em>출처</em></p>\n<p><em><a href=\"https://hongchangsub.com/springcore5/\">hongchangsub님 블로그</a></em></p>\n<p><em><a href=\"https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81-mvc-1#\">인프런 스프링 MVC 강의 1편</a></em></p>\n<p><em><a href=\"https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81-%ED%95%B5%EC%8B%AC-%EC%9B%90%EB%A6%AC-%EA%B8%B0%EB%B3%B8%ED%8E%B8/\">인프런 스프링 핵심 원리 기본편</a></em></p>\n<br/>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EC%8B%B1%EA%B8%80%ED%86%A4-%ED%8C%A8%ED%84%B4\"><strong>싱글톤 패턴</strong></a></li>\n<li><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88\"><strong>스프링 컨테이너</strong></a></li>\n<li><a href=\"#%EC%8B%B1%EA%B8%80%ED%86%A4-%ED%8C%A8%ED%84%B4%EC%9D%98-%EC%A3%BC%EC%9D%98%EC%A0%90\"><strong>싱글톤 패턴의 주의점</strong></a></li>\n</ul>\n</div>","excerpt":"지적과 댓글은 언제나 환영합니다! 싱글톤 패턴 클래스의 인스턴스가 딱 1개만 생성되는 것을 보장하는 디자인 패턴이다. 해당되는 인스턴스에 대해서 private 생성자를 사용해 최초 1번만 static 인스턴스를 생성하는 디자인 패턴이다. 이러한 싱글톤 패턴은 내부 설계를 변경하거나 초기화하기가 어렵다. 또한, private 생성자를 사용하기 때문에 자식 클래스를 만들기 어렵다. 즉, 많이 사용할수록 유연하지 않은 설계가 된다. 스프링 컨테이너 이를 해결하기 위해 등장한 것이 스프링 컨테이너이다. 싱글톤 패턴을 적용하지 않아도, 객체 인스턴스를 싱글톤으로 관리한다. 스프링은 객체를 로 복사해서  객체로 다시 만든다. 그리고 이를 으로 등록할 수 있게 해준다. 이 때 사용하는 라이브러리가 CGLIB이다. 이 CGLIB 덕분에 바이트 코드 조작이 가능해져서, Spring에서 객체를 출력할 때,  과 같은 문구가 붙은 것이다. 결과적으로, 스프링 컨테이너는 싱글톤 패턴의 문제점을 해결하면…","frontmatter":{"date":"September 21, 2022","title":"스프링 싱글톤(Singleton)과 컨테이너(Container)를 아시나요?","categories":"Spring","author":"주녁","emoji":"🔮"},"fields":{"slug":"/Spring-Learn-Singleton-And-Container/"}},"next":{"id":"d246735e-c820-57d1-a521-88904303a74a","html":"<p>지적과 댓글은 언제나 환영합니다!</p>\n<br>\n<hr>\n<h2 id=\"피자가게에서-시작하는-질문\" style=\"position:relative;\"><a href=\"#%ED%94%BC%EC%9E%90%EA%B0%80%EA%B2%8C%EC%97%90%EC%84%9C-%EC%8B%9C%EC%9E%91%ED%95%98%EB%8A%94-%EC%A7%88%EB%AC%B8\" aria-label=\"피자가게에서 시작하는 질문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>피자가게에서 시작하는 질문</strong></h2>\n<br>\n<p>피자를 만드는 <code class=\"language-text\">직원</code>은 <u>고용주가 고용했지만</u>,</p>\n<p>정작 <u>손님 명령에 따라 피자를 만든다.</u></p>\n<p>혹시, 위 사실이 이상하다는 생각을 해본 적 있는가?</p>\n<p>전혀 이상하게 느끼지 못했을 것이다.</p>\n<br>\n<p>프로그래밍의 많은 부분은 현실세계를 모방하여 만들어진다.</p>\n<p><u>서비스를 제공하는 쪽이 사용하는 쪽에 의존한다.</u></p>\n<p>이를 <code class=\"language-text\">제어의 역전</code>(IoC, Inverse of Control)라고 부른다.</p>\n<p>IoC도 피자가게와 같은 맥락을 가진다.</p>\n<br>\n<p>IoC는 의존관계를 최소화하기 위해 사용한다.</p>\n<p>그렇다면, <u>의존관계 최소화는 왜 필요할까?</u></p>\n<br/>\n<hr>\n<h2 id=\"피자와-의존관계\" style=\"position:relative;\"><a href=\"#%ED%94%BC%EC%9E%90%EC%99%80-%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84\" aria-label=\"피자와 의존관계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>피자와 의존관계</strong></h2>\n<br/>\n<p>의존관계 설명에 앞서,</p>\n<p><code class=\"language-text\">피자를 만드는 직원</code> A와</p>\n<p><code class=\"language-text\">서빙을 하는 직원</code> B가 있다고 해보자.</p>\n<br>\n<p><code class=\"language-text\">A</code>는 누가 주문했는지 몰라도, 피자를 만들 수 있다.</p>\n<p><code class=\"language-text\">B</code>는 피자 레시피를 몰라도, 피자를 전달할 수 있다.</p>\n<p>서로 하는 일은 알지만, 내용은 몰라도 되기 때문일 것이다.</p>\n<br>\n<p><u>만약 A와 B가 동일인물(1명)이라면 어떻게 될까?</u></p>\n<br>\n<p><code class=\"language-text\">A</code>가 주문을 받을때, 피자를 만들 수 없다.</p>\n<p><code class=\"language-text\">A</code>가 피자를 만들때, 주문을 받을 수 없다.</p>\n<p><u>주문받기와 피자만들기 간에 강력한 의존이 생기는 것이다.</u></p>\n<br>\n<p>위 사례를 다음과 같이 치환해보자.</p>\n<br/>\n<hr>\n<h2 id=\"의존관계와-인터페이스\" style=\"position:relative;\"><a href=\"#%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84%EC%99%80-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4\" aria-label=\"의존관계와 인터페이스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>의존관계와 인터페이스</strong></h2>\n<br>\n<p><code class=\"language-text\">날씨 메시지를 생산하는 서비스</code> A와</p>\n<p><code class=\"language-text\">요청에 메시지를 전달하는 컨트롤러</code> B가 있다고 해보자.</p>\n<br>\n<p><code class=\"language-text\">A</code>는 누가 요청했는지는 몰라도 날씨 메시지(=피자)를 만들 수 있다.</p>\n<p><code class=\"language-text\">B</code>는 날씨 메시지 알고리즘은 몰라도 메시지(=피자)를 전달할 수 있다.</p>\n<p>서로 하는 일은 알지만, 내용은 몰라도 되기 때문일 것이다.</p>\n<br>\n<p>이러한 역할을 하는 것이 <code class=\"language-text\">인터페이스(Interface)</code>이고,</p>\n<p>서로 의존관계를 최소화한 경우라고 표현할 수 있을 것이다.</p>\n<p>*<em><code class=\"language-text\">인터페이스(Interface)</code>를 많이 애용하길 바란다!</em></p>\n<br>\n<p>스프링과 같은 웹 프레임워크를 사용할 때를 생각해보자.</p>\n<p>Controller, Service 같은 객체들의 동작을 우리가 직접 구현하기는 하지만,</p>\n<p><u>해당 객체들이 어느 시점에 호출될 지는 신경쓰지 않는다.</u></p>\n<br>\n<p>단지 사용하는 쪽인 프레임워크가 <u>요구하는대로 객체를 생성하면,</p>\n<p>프레임워크가 가져다가 사용한다.</u></p>\n<p>(해당 객체들을 가져다가 생성하고, 메서드를 호출하고, 소멸시킨다.)</p>\n<p>프로그램의 제어권이 역전된 것이다.</p>\n<br/>\n<p>본론으로 돌아가서</p>\n<p>IoC는 <u>역할과 관심을 분리해 변경에 유연한 코드를 작성할 수 있도록 해준다.</u></p>\n<p>(<code class=\"language-text\">응집도</code>를 높이고, <code class=\"language-text\">결합도</code>를 낮춘다.)</p>\n<p>이러한 IoC에도 원칙이 있다.</p>\n<br/>\n<hr>\n<h2 id=\"ioc의-원칙-dip\" style=\"position:relative;\"><a href=\"#ioc%EC%9D%98-%EC%9B%90%EC%B9%99-dip\" aria-label=\"ioc의 원칙 dip permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>IoC의 원칙, DIP</strong></h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1. 고차원 모듈은 저차원 모듈에 의존하면 안된다. \n2. 이 모듈 모두 다른 추상화된 것에 의존해야 한다.\n3. 추상화 된 것은 구체적인 것에 의존하면 안 된다. \n4. 구체적인 것이 추상화된 것에 의존해야 한다. \n                                - Martin, Robert C. -</code></pre></div>\n<br>\n<p>이러한 원칙을 <code class=\"language-text\">DIP</code>(Dependency Inversion Principle)이라고 한다.</p>\n<p>겉보기엔 어려워보이지만, 해석하면 당연한 이야기이다.</p>\n<p>위 원칙을 적용한 코드의 예시는 아래와 같다.</p>\n<p>(Java 문법을 기준으로 작성하였고, 엄격한 예시가 아닐 수 있다!)</p>\n<br/>\n<ol>\n<li>\n<p><code class=\"language-text\">고차원 모듈</code>(=피자 가게)는 <code class=\"language-text\">저차원 모듈</code>(=직원)에 의존하면 안된다.</p>\n<p>직원이 Senior <code class=\"language-text\">A</code> → Junior <code class=\"language-text\">C</code>로 변경되어도, 수행하는 역할은 같아야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PizzaStore</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">KitchenStaff</span> kitchenStaff<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token function\">runStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n        kitchenStaff<span class=\"token punctuation\">.</span><span class=\"token function\">makePizza</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SeniorKitchenStaff</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">KitchenStaff</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Point</span> from<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Point</span> <span class=\"token keyword\">to</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Pizza</span> <span class=\"token function\">makePizza</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Bread</span> bread<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Topping</span> topping<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>빨리 만든다<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JuniorKitchenStaff</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">KitchenStaff</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Point</span> from<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Point</span> <span class=\"token keyword\">to</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Pizza</span> <span class=\"token function\">makePizza</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Bread</span> bread<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Topping</span> topping<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>느리게 만든다<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n <br>\n</li>\n<li>\n<p>이 <code class=\"language-text\">모듈</code> 모두 다른 <code class=\"language-text\">추상화된 것</code>에 의존해야 한다.</p>\n<p>피자가게는 가게라고 뭉뚱그려 말할 수 있고(추상화),</p>\n<p>직원 또한 일할 수 있는 무언가(인간, 로봇, 똑똑한 강아지..)라고 뭉뚱그려 말할 수 있다.</p>\n<p>→ 모든 개념을 점점 세세하게 분해해야 한다는 의미이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Staff</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Movable</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 직원은 움직일 수 있어야 한다.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Movable</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 움직이는 행동이 가능한 인터페이스</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Point</span> from<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Point</span> <span class=\"token keyword\">to</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">KitchenStaff</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Staff</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 움직일 수 있고, 피자를 만들 수 있는 직원!</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Point</span> from<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Point</span> <span class=\"token keyword\">to</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>walk<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Pizza</span> <span class=\"token function\">makePizza</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Bread</span> bread<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Topping</span> topping<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>피자를 만든다<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n <br>\n</li>\n<li>\n<p><code class=\"language-text\">추상화 된 것</code>(=피자)은 <code class=\"language-text\">구체적인 것</code>(=레시피)에 의존하면 안 된다.</p>\n<p>페퍼로니 피자와 포테이토 피자는 레시피가 달라도 피자라는 개념은 동일하다.</p>\n<p>피자의 내용물에 따라 피자의 역할을 벗어나는 경우가 없어야한다.</p>\n<p>(못먹는 피자가 되거나, 피자가 직원 대신 일을 한다던가!)</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token class-name\">Class</span> <span class=\"token class-name\">Pizza</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Bread</span> bread<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Topping</span> topping<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> size<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">public</span> <span class=\"token class-name\">Taste</span> <span class=\"token function\">taste</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 피자는 맛을 낸다!</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Class</span> <span class=\"token class-name\">WeirdPizza</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Pizza</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 이 이상한 피자는 직원을 가지고 있다!</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Staff</span> staff<span class=\"token punctuation\">;</span> \n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Taste</span> <span class=\"token function\">taste</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Taste</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Weird Taste\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">work</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>이 이상한 피자는 일도 할 수 있다<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n <br>\n</li>\n<li>\n<p><code class=\"language-text\">구체적인 것</code>(=레시피)이 <code class=\"language-text\">추상화된 것</code>(=피자)에 의존해야 한다.</p>\n<p>모든 피자는 도우 위에 토핑이 들어가고, 오븐에 굽는다.</p>\n<p>피자의 도우 크기, 토핑 종류, 얼마나 굽는지 구체적인 요소는</p>\n<p>피자를 정의하는데 전혀 영향을 미치지 않는다.</p>\n <br>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Class</span> <span class=\"token class-name\">PotatoPizza</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Pizza</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">PotatoPizza</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Bread</span> bread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bread <span class=\"token operator\">=</span> bread<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>topping <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Topping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Potato\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Taste</span> <span class=\"token function\">taste</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Taste</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Potato Taste\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// example</span>\n<span class=\"token class-name\">Pizza</span> pizza <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PotatoPizza</span><span class=\"token punctuation\">(</span>bread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npizza<span class=\"token punctuation\">.</span><span class=\"token function\">taste</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 어떤 피자던 먹으면 맛이 난다.</span></code></pre></div>\n</li>\n</ol>\n<br>\n<hr>\n<h2 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>마치며</strong></h2>\n<br>\n<p>자, 이제 IoC와 DIP를 설명할 수 있는가?</p>\n<br>\n<p>이렇게 IoC를 사용하고, DIP를 지킨다면,</p>\n<p>확장에 유연하게 대응할 수 있는</p>\n<p>튼튼한 구조를 설계할 수 있을 것이다.</p>\n<p><br/><br/></p>\n<p><em>출처</em></p>\n<p><em><a href=\"https://develogs.tistory.com/19\">develogs님 블로그</a></em></p>\n<p><em><a href=\"https://ipex.tistory.com/entry/3-Spring-%EA%B0%9C%EC%9A%94-2-IOC-%EB%B0%8F-DI\">깍돌이님 블로그</a></em></p>\n<p><em><a href=\"https://www.youtube.com/watch?v=8lp_nHicYd4&#x26;list=WL&#x26;index=20\">10분 테코톡 오찌, 야호의 DI와 IoC</a></em></p>\n<br/>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%ED%94%BC%EC%9E%90%EA%B0%80%EA%B2%8C%EC%97%90%EC%84%9C-%EC%8B%9C%EC%9E%91%ED%95%98%EB%8A%94-%EC%A7%88%EB%AC%B8\"><strong>피자가게에서 시작하는 질문</strong></a></li>\n<li><a href=\"#%ED%94%BC%EC%9E%90%EC%99%80-%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84\"><strong>피자와 의존관계</strong></a></li>\n<li><a href=\"#%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84%EC%99%80-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4\"><strong>의존관계와 인터페이스</strong></a></li>\n<li><a href=\"#ioc%EC%9D%98-%EC%9B%90%EC%B9%99-dip\"><strong>IoC의 원칙, DIP</strong></a></li>\n<li><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\"><strong>마치며</strong></a></li>\n</ul>\n</div>","frontmatter":{"date":"September 21, 2022","title":"IoC와 DIP를 아시나요?","categories":"knowledge","author":"주녁","emoji":"🔮"},"fields":{"slug":"/knowledge-about-IoC-And-DI/"}},"prev":{"id":"154dbc17-388c-5f3e-b9db-35437036ef17","html":"<p>지적과 댓글은 언제나 환영합니다!</p>\n<h2 id=\"index\" style=\"position:relative;\"><a href=\"#index\" aria-label=\"index permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>INDEX</h2>\n<p><a href=\"#GROUP\">1. GROUP 관련</a></p>\n<p><a href=\"#JOIN\">2. JOIN 관련</a></p>\n<p><a href=\"#STRING\">3. String 관련</a></p>\n<p><a href=\"#Date\">4. Date 관련</a></p>\n<p><a href=\"#DISTINCT\">5. 중복제거(DISTINCT) 관련</a></p>\n<p><a href=\"#IFNULL\">6. 빈 값(NULL) 처리</a></p>\n<p><a href=\"#PLSQL\">7. 복잡한 쿼리(PL/SQL)</a></p>\n<p><br/><br/></p>\n<hr>\n<h2 id=\"group-관련span-idgroupspan\" style=\"position:relative;\"><a href=\"#group-%EA%B4%80%EB%A0%A8span-idgroupspan\" aria-label=\"group 관련span idgroupspan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GROUP 관련<span id=\"GROUP\"></span></h2>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 두 번 이상 쓰인 이름, 해당 이름이 쓰인 횟수</span>\n<span class=\"token keyword\">SELECT</span>\n    NAME\n    <span class=\"token punctuation\">,</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span>NAME<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">FROM</span>\n    ANIMAL_INS\n<span class=\"token keyword\">WHERE</span>\n    NAME <span class=\"token operator\">IS</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span>\n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span>\n    NAME\n<span class=\"token keyword\">HAVING</span>\n    <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span>NAME<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span>\n    NAME</code></pre></div>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 각 시간대별 건수</span>\n<span class=\"token keyword\">SELECT</span>\n    <span class=\"token keyword\">HOUR</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">DATETIME</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token keyword\">HOUR</span>\n    <span class=\"token punctuation\">,</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">HOUR</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">DATETIME</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">FROM</span>\n    ANIMAL_OUTS\n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span>\n    <span class=\"token keyword\">HOUR</span>\n<span class=\"token keyword\">HAVING</span>\n    <span class=\"token keyword\">HOUR</span> <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">9</span> <span class=\"token operator\">AND</span> <span class=\"token number\">19</span>\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span>\n    <span class=\"token keyword\">HOUR</span></code></pre></div>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 각 시간대별 건수(빈 값 포함) ★★★</span>\n<span class=\"token keyword\">SET</span> <span class=\"token variable\">@HOUR</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span>\n    <span class=\"token punctuation\">(</span><span class=\"token variable\">@HOUR</span> :<span class=\"token operator\">=</span> <span class=\"token variable\">@HOUR</span> <span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token keyword\">HOUR</span>\n    <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token keyword\">SELECT</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">HOUR</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">DATETIME</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">FROM</span>\n            ANIMAL_OUTS\n        <span class=\"token keyword\">WHERE</span>\n            <span class=\"token keyword\">HOUR</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">DATETIME</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token variable\">@HOUR</span>\n      <span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> COUNT\n<span class=\"token keyword\">FROM</span>\n    ANIMAL_OUTS\n<span class=\"token keyword\">WHERE</span>\n    <span class=\"token variable\">@HOUR</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">23</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<hr>\n<h2 id=\"join-관련span-idjoinspan\" style=\"position:relative;\"><a href=\"#join-%EA%B4%80%EB%A0%A8span-idjoinspan\" aria-label=\"join 관련span idjoinspan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JOIN 관련<span id=\"JOIN\"></span></h2>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 한쪽 테이블에만 값이 있는 경우(OUTER JOIN)</span>\n<span class=\"token keyword\">SELECT</span>\n    OUTS<span class=\"token punctuation\">.</span>ANIMAL_ID\n    <span class=\"token punctuation\">,</span> OUTS<span class=\"token punctuation\">.</span>NAME\n<span class=\"token keyword\">FROM</span>\n    ANIMAL_OUTS OUTS\n    <span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">OUTER</span> <span class=\"token keyword\">JOIN</span>\n        ANIMAL_INS INS\n    <span class=\"token keyword\">ON</span>\n        OUTS<span class=\"token punctuation\">.</span>ANIMAL_ID <span class=\"token operator\">=</span> INS<span class=\"token punctuation\">.</span>ANIMAL_ID\n<span class=\"token keyword\">WHERE</span>\n    INS<span class=\"token punctuation\">.</span>ANIMAL_ID <span class=\"token operator\">IS</span> <span class=\"token boolean\">NULL</span>\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span>\n    OUTS<span class=\"token punctuation\">.</span>ANIMAL_ID</code></pre></div>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 양쪽 테이블에 일치하는 값이 있고</span>\n<span class=\"token comment\">-- JOIN 후 특정 조건 검색</span>\n<span class=\"token keyword\">SELECT</span>\n    INS<span class=\"token punctuation\">.</span>ANIMAL_ID\n    <span class=\"token punctuation\">,</span> INS<span class=\"token punctuation\">.</span>NAME\n<span class=\"token keyword\">FROM</span>\n    ANIMAL_INS INS\n    <span class=\"token keyword\">JOIN</span>\n        ANIMAL_OUTS OUTS\n    <span class=\"token keyword\">ON</span>\n        INS<span class=\"token punctuation\">.</span>ANIMAL_ID <span class=\"token operator\">=</span> OUTS<span class=\"token punctuation\">.</span>ANIMAL_ID\n<span class=\"token keyword\">WHERE</span>\n    INS<span class=\"token punctuation\">.</span><span class=\"token keyword\">DATETIME</span> <span class=\"token operator\">></span> OUTS<span class=\"token punctuation\">.</span><span class=\"token keyword\">DATETIME</span>\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span>\n    INS<span class=\"token punctuation\">.</span><span class=\"token keyword\">DATETIME</span></code></pre></div>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- INNER JOIN 후 평균 구하기</span>\n<span class=\"token keyword\">SELECT</span>\n    RI<span class=\"token punctuation\">.</span>REST_ID<span class=\"token punctuation\">,</span>\n    RI<span class=\"token punctuation\">.</span>REST_NAME<span class=\"token punctuation\">,</span>\n    RI<span class=\"token punctuation\">.</span>FOOD_TYPE<span class=\"token punctuation\">,</span>\n    RI<span class=\"token punctuation\">.</span>FAVORITES<span class=\"token punctuation\">,</span>\n    RI<span class=\"token punctuation\">.</span>ADDRESS<span class=\"token punctuation\">,</span>\n    RR<span class=\"token punctuation\">.</span>SCORE\n<span class=\"token keyword\">FROM</span>\n    REST_INFO RI\n    <span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token keyword\">SELECT</span> \n            REST_ID<span class=\"token punctuation\">,</span> \n            <span class=\"token function\">ROUND</span><span class=\"token punctuation\">(</span><span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>REVIEW_SCORE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> SCORE\n        <span class=\"token keyword\">FROM</span> \n            REST_REVIEW\n        <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> REST_ID\n    <span class=\"token punctuation\">)</span> RR\n    <span class=\"token keyword\">ON</span> RI<span class=\"token punctuation\">.</span>REST_ID <span class=\"token operator\">=</span> RR<span class=\"token punctuation\">.</span>REST_ID\n<span class=\"token keyword\">WHERE</span>\n    RI<span class=\"token punctuation\">.</span>ADDRESS <span class=\"token operator\">LIKE</span> <span class=\"token string\">'서울%'</span>\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> \n    RR<span class=\"token punctuation\">.</span>SCORE <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">,</span>\n    RI<span class=\"token punctuation\">.</span>FAVORITES <span class=\"token keyword\">DESC</span>\n</code></pre></div>\n<br>\n<hr>\n<h2 id=\"string-관련-span-idstringspan\" style=\"position:relative;\"><a href=\"#string-%EA%B4%80%EB%A0%A8-span-idstringspan\" aria-label=\"string 관련 span idstringspan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>String 관련 <span id=\"STRING\"><span></h2>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 특정 문자열 조건 검색</span>\n<span class=\"token keyword\">SELECT</span>\n    ANIMAL_ID\n    <span class=\"token punctuation\">,</span> NAME\n<span class=\"token keyword\">FROM</span>\n    ANIMAL_INS\n<span class=\"token keyword\">WHERE</span>\n    ANIMAL_TYPE <span class=\"token operator\">=</span> <span class=\"token string\">\"Dog\"</span>\n    <span class=\"token operator\">AND</span> NAME <span class=\"token operator\">LIKE</span> <span class=\"token string\">\"%EL%\"</span>\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span>\n    NAME</code></pre></div>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 특정 문자열 조건이면 O, X로 표시하기</span>\n<span class=\"token keyword\">SELECT</span>\n    ANIMAL_ID\n    <span class=\"token punctuation\">,</span> NAME\n    <span class=\"token punctuation\">,</span> <span class=\"token keyword\">CASE</span>\n        <span class=\"token keyword\">WHEN</span>\n            SEX_UPON_INTAKE <span class=\"token operator\">LIKE</span> <span class=\"token string\">'%Neutered%'</span>\n            <span class=\"token operator\">OR</span> SEX_UPON_INTAKE <span class=\"token operator\">LIKE</span> <span class=\"token string\">'%Spayed%'</span>\n        <span class=\"token keyword\">THEN</span> <span class=\"token string\">'O'</span>\n        <span class=\"token keyword\">ELSE</span> <span class=\"token string\">'X'</span>\n    <span class=\"token keyword\">END</span> <span class=\"token keyword\">as</span> <span class=\"token string\">'중성화'</span>\n<span class=\"token keyword\">FROM</span>\n    ANIMAL_INS\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span>\n    ANIMAL_ID</code></pre></div>\n<br>\n<hr>\n<h2 id=\"date-관련-span-iddatespan\" style=\"position:relative;\"><a href=\"#date-%EA%B4%80%EB%A0%A8-span-iddatespan\" aria-label=\"date 관련 span iddatespan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Date 관련 <span id=\"Date\"><span></h2>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 날짜끼리 연산</span>\n<span class=\"token keyword\">SELECT</span>\n    INS<span class=\"token punctuation\">.</span>ANIMAL_ID\n    <span class=\"token punctuation\">,</span> INS<span class=\"token punctuation\">.</span>NAME\n    <span class=\"token comment\">-- OUTS.DATETIME - INS.DATETIME</span>\n<span class=\"token keyword\">FROM</span>\n    ANIMAL_INS INS\n    <span class=\"token keyword\">JOIN</span>\n        ANIMAL_OUTS OUTS\n    <span class=\"token keyword\">ON</span>\n        INS<span class=\"token punctuation\">.</span>ANIMAL_ID <span class=\"token operator\">=</span> OUTS<span class=\"token punctuation\">.</span>ANIMAL_ID\n<span class=\"token keyword\">WHERE</span>\n    OUTS<span class=\"token punctuation\">.</span><span class=\"token keyword\">DATETIME</span> <span class=\"token operator\">></span> INS<span class=\"token punctuation\">.</span><span class=\"token keyword\">DATETIME</span>\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span>\n    OUTS<span class=\"token punctuation\">.</span><span class=\"token keyword\">DATETIME</span> <span class=\"token operator\">-</span> INS<span class=\"token punctuation\">.</span><span class=\"token keyword\">DATETIME</span> <span class=\"token keyword\">DESC</span>\n<span class=\"token keyword\">LIMIT</span> <span class=\"token number\">2</span></code></pre></div>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- DATETIME 포맷 변경</span>\n<span class=\"token keyword\">SELECT</span>\n    ANIMAL_ID\n    <span class=\"token punctuation\">,</span> NAME\n    <span class=\"token punctuation\">,</span> DATE_FORMAT<span class=\"token punctuation\">(</span><span class=\"token keyword\">DATETIME</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'%Y-%m-%d'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> 날짜\n<span class=\"token keyword\">FROM</span>\n    ANIMAL_INS\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span>\n    ANIMAL_ID</code></pre></div>\n<hr>\n<h2 id=\"중복제거distinct-관련-span-iddistinctspan\" style=\"position:relative;\"><a href=\"#%EC%A4%91%EB%B3%B5%EC%A0%9C%EA%B1%B0distinct-%EA%B4%80%EB%A0%A8-span-iddistinctspan\" aria-label=\"중복제거distinct 관련 span iddistinctspan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>중복제거(DISTINCT) 관련 <span id=\"DISTINCT\"><span></h2>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 중복을 제거한 카운트</span>\n<span class=\"token keyword\">SELECT</span>\n    <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">DISTINCT</span> NAME<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">FROM</span>\n    ANIMAL_INS</code></pre></div>\n<br>\n<hr>\n<h2 id=\"group-관련span-idgroupspan-1\" style=\"position:relative;\"><a href=\"#group-%EA%B4%80%EB%A0%A8span-idgroupspan-1\" aria-label=\"group 관련span idgroupspan 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GROUP 관련<span id=\"GROUP\"></span></h2>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 이름이 NULL 값일 때 처리</span>\n<span class=\"token keyword\">SELECT</span>\n    ANIMAL_TYPE\n    <span class=\"token punctuation\">,</span> IFNULL<span class=\"token punctuation\">(</span>NAME<span class=\"token punctuation\">,</span> <span class=\"token string\">\"No name\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">,</span> SEX_UPON_INTAKE\n<span class=\"token keyword\">FROM</span>\n    ANIMAL_INS\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span>\n    ANIMAL_ID</code></pre></div>\n<br/>\n<hr>\n<h2 id=\"7-복잡한-쿼리plsqlspan-idplsqlspan\" style=\"position:relative;\"><a href=\"#7-%EB%B3%B5%EC%9E%A1%ED%95%9C-%EC%BF%BC%EB%A6%ACplsqlspan-idplsqlspan\" aria-label=\"7 복잡한 쿼리plsqlspan idplsqlspan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. 복잡한 쿼리(PL/SQL)<span id=\"PLSQL\"></span></h2>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 동적 쿼리를 이용한 평균나이 구하기</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token operator\">OR</span> <span class=\"token keyword\">REPLACE</span> <span class=\"token keyword\">FUNCTION</span> avg_ages<span class=\"token punctuation\">(</span>n <span class=\"token keyword\">INTEGER</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">RETURNS</span> <span class=\"token keyword\">NUMERIC</span> <span class=\"token keyword\">AS</span> $$\n<span class=\"token keyword\">DECLARE</span>\n    r RECORD<span class=\"token punctuation\">;</span>\n    total <span class=\"token keyword\">NUMERIC</span> :<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    query <span class=\"token keyword\">TEXT</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">BEGIN</span>\n    query :<span class=\"token operator\">=</span> <span class=\"token string\">'SELECT age FROM person LIMIT $1'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">FOR</span> r <span class=\"token operator\">IN</span> <span class=\"token keyword\">EXECUTE</span> query <span class=\"token keyword\">USING</span> n\n    <span class=\"token keyword\">LOOP</span>\n        total :<span class=\"token operator\">=</span> total <span class=\"token operator\">+</span> r<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">END</span> <span class=\"token keyword\">LOOP</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">RETURN</span> total <span class=\"token operator\">/</span> n<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">END</span><span class=\"token punctuation\">;</span>\n$$ <span class=\"token keyword\">LANGUAGE</span> plpgsql<span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- 재구매가 일어난 상품과 회원 리스트</span>\n</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 정렬 기준 세분화</span></code></pre></div>\n<hr>\n<br>\n<p><em>참고자료</em></p>\n<p><em><a href=\"http://www.gisdeveloper.co.kr/?p=4573\">PostgreSQL의 PL/pgSQL 튜토리얼 – 3 : 변수와 상수</a></em></p>\n<p><em><a href=\"http://www.gisdeveloper.co.kr/?p=4582\">PostgreSQL의 PL/pgSQL 튜토리얼 – 4 : IF 조건문</a></em></p>\n<p><em><a href=\"http://www.gisdeveloper.co.kr/?p=4601\">PostgreSQL의 PL/pgSQL 튜토리얼 – 5 : CASE 조건문</a></em></p>\n<p><em><a href=\"http://www.gisdeveloper.co.kr/?p=4621\">PostgreSQL의 PL/pgSQL 튜토리얼 – 6 : 반복문</a></em></p>\n<p><em><a href=\"http://www.gisdeveloper.co.kr/?p=4642\">PostgreSQL의 PL/pgSQL 튜토리얼 – 7 : 질의 결과를 반환하는 함수</a></em></p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#index\">INDEX</a></li>\n<li><a href=\"#group-%EA%B4%80%EB%A0%A8span-idgroupspan\">GROUP 관련<span id=\"GROUP\"></span></a></li>\n<li><a href=\"#join-%EA%B4%80%EB%A0%A8span-idjoinspan\">JOIN 관련<span id=\"JOIN\"></span></a></li>\n<li><a href=\"#string-%EA%B4%80%EB%A0%A8-span-idstringspan\">String 관련 <span id=\"STRING\"><span></a></li>\n<li><a href=\"#date-%EA%B4%80%EB%A0%A8-span-iddatespan\">Date 관련 <span id=\"Date\"><span></a></li>\n<li><a href=\"#%EC%A4%91%EB%B3%B5%EC%A0%9C%EA%B1%B0distinct-%EA%B4%80%EB%A0%A8-span-iddistinctspan\">중복제거(DISTINCT) 관련 <span id=\"DISTINCT\"><span></a></li>\n<li><a href=\"#group-%EA%B4%80%EB%A0%A8span-idgroupspan-1\">GROUP 관련<span id=\"GROUP\"></span></a></li>\n<li><a href=\"#7-%EB%B3%B5%EC%9E%A1%ED%95%9C-%EC%BF%BC%EB%A6%ACplsqlspan-idplsqlspan\">7. 복잡한 쿼리(PL/SQL)<span id=\"PLSQL\"></span></a></li>\n</ul>\n</div>","frontmatter":{"date":"October 01, 2022","title":"알고리즘에서 써먹는 SQL 문법 정리","categories":"how-to","author":"주녁","emoji":"🔮"},"fields":{"slug":"/How-to-use-Sql/"}},"site":{"siteMetadata":{"siteUrl":"https://www.junwork.net","comments":{"utterances":{"repo":"junwork123/blog-comments"}}}}},"pageContext":{"slug":"/Spring-Learn-Singleton-And-Container/","nextSlug":"/knowledge-about-IoC-And-DI/","prevSlug":"/How-to-use-Sql/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}