{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"43dc49f4-5e31-5b54-9058-2da23b3dd185","excerpt":"스프링 라이프 사이클 스프링 빈은 간단하게 다음과 같은 라이프사이클을 가진다. 객체 생성 → 의존관계 주입  좀 더 자세하게 나누면 아래와 같다. 어플리케이션 시작 → 스프링 컨테이너 생성 → 스프링 빈 생성 → 의존관계 주입 → 초기화 콜백(빈이 생성되고, 빈의 의존관계 주입이 완료된 후 호출) → 사용 → 소멸전 콜백(빈이 소멸되기 직전에 호출) → 스프링 종료  스프링 빈은 객체를 생성하고, 의존관계 주입이 다 끝난 다음에야 필요한 데이터를 사용할 수 있는 준비가 완료된다. 따라서 초기화 작업은 의존관계 주입이 모두 완료되고 난 다음에 호출해야 한다.  그런데 개발자가 의존관계 주입이 모두 완료된 시점을 어떻게 알 수 있을까? 스프링은 의존관계 주입이 완료되면 스프링 빈에게 콜백 메서드를 통해서 초기화 시점을 알려주는 다양한 기능을 제공한다.  또한 스프링은 스프링 컨테이너가 종료되기 직전에 소멸 콜백을 준다. 따라서 안전하게 종료 작업을 진행할 수 있다.  스프링은 크게 3…","frontmatter":{"categories":"Spring","title":"스프링 라이프 사이클(Spring Life Cycle)","date":"July 28, 2022"},"fields":{"slug":"/Spring-Learn-Life-Cycle/"}}},{"node":{"id":"668c5952-ba78-5ace-9560-65dcf2da81a7","excerpt":"인텔리제이(intelliJ) 사용법 정리 코드 축약어  → public static void main 자동 생성  →  System.out.println() 자동 생성  = 자동 주석 생성(javadoc 형식)  = foreach문 자동 생성  단축키  : 검색창 띄우기  : Rename  : 최근 열어본 페이지 목록  : 특정부분만 추출해서 메소드로 만들기  : 코드 인덴트 정리  : 반환형에 맞게 변수로 추출(extract)  : 코드 블럭을 메소드로 추출(extract)  : Getter/Setter 코드 생성  : 클래스 테스트 생성  : 오버라이드 메소드 호출  : 재시작(Stop & Rerun)  : 프로젝트 목록창으로 포커스 이동  : 다시 코드 에디터로 포커스 이동  참고자료 jaimemi님 블로그 코드 축약어 단축키","frontmatter":{"categories":"how-to","title":"인텔리제이(intelliJ) 사용법 정리","date":"July 23, 2022"},"fields":{"slug":"/How-to-use-intelliJ/"}}},{"node":{"id":"ccb9cb8f-a475-527a-93dd-eb5818cd9c4e","excerpt":"지적과 댓글은 언제나 환영합니다!  생성자 주입을 써야하는 이유 불변 생성자 주입을 사용하면 애플리케이션 종료까지 의존관계를 변경할 수 없다. 대부분의 의존관계는 애플리케이션 종료까지 변하지 않아야 좋은 설계라고 할 수 있다. 때문에 생성자 주입을 사용해야 한다. 다른 주입방식은 public으로 열어놔야 하기 때문에 수정의 우려가 있어 좋은 설계방법이 아니다.  누락방지 final 키워드 사용으로 생성자에서 혹시라도 값이 설정되지 않는 오류를 컴파일 시점에서 검출할 수 있다. 다른 주입 방식은 생성자 호출 이후에 주입되므로 final 키워드를 사용할 수 없다. DI란 외부에서 두 객체 간의 관계를 결정해주는 디자인 패턴으로, 인터페이스를 사이에 둬서 클래스 레벨에서는 의존관계가 고정되지 않도록 하고 런타임 시에 관계를 다이나믹하게 주입하여 유연성을 확보하고 결합도를 낮출 수 있게 해준다. OCP 원칙을 지키며 객체의 불변성을 확보할 수 있다. 테스트 코드의 작성이 용이해진다. fi…","frontmatter":{"categories":"Spring","title":"스프링 생성자 주입을 써야하는 이유","date":"July 23, 2022"},"fields":{"slug":"/Spring-Learn-Why-Use-DI/"}}},{"node":{"id":"13471e64-e00c-5402-8f5a-7dcd4e2fbf8f","excerpt":"이전편 1편에서 계속.. 버튼 템플릿 만들기  먼저 이 우리가 보낼 이다. 이미지 3개가 있는 것이 눈에 띌 텐데 우리는 일단 한가지 이미지만 사용할 예정이므로 2개정도는 삭제해주자 썸네일에  에 이미지를 삽입해주자   만약  바꿔주고 싶다면 을 눌러서 썸네일로 지정할 변수명을 적어주자 이 변수명은  형태로 페이지 HTML에 삽입하면 사용할 수 있다. 일단은 마저 설정을 완료하자.   다음은 에서 표시될 소개를 적어보자 필자는 블로그명과 로고를 삽입했다. 여기도 변수명을 적을 수 있지만 로고는 쉽게 바뀌는 것은 아니므로 고정적으로 두었다.   다음은 이다. , 을 적어주자 (변수명은 아무래도 좋다!)   마지막으로 소셜 탭에서는 좋아요, 조회수, 공유수를 설정할 수 있다. 여기도 마찬가지로 변수를 통해 노출시킬 수 있지만 블로그에 설치한 플러그인마다 설정된 변수명을 추출해야 한다. 이제 설정을 완료했으니 최종화면을 확인해보자.   를 보면 설정을 완료한 을 볼 수 있다. 우리가 설…","frontmatter":{"categories":"블로그-발전기","title":"React 블로그에 소셜기능 넣기 - 공유버튼 만들기(2)","date":"July 09, 2022"},"fields":{"slug":"/blog-social-feature-button2/"}}},{"node":{"id":"40ecb194-1f96-5a2c-9586-33150082b740","excerpt":"소셜기능 우리 블로그의 글을 널리 퍼트릴 수 있도록 를 넣어보자. 대표적으로 가장 많이 사용하는 을 넣어보고, 이를 응용해서 을 만들어 볼 것이다.  카카오 개발자센터 우리는 먼저 카카오 개발자센터에서 하고, 을 만들 것이다.   애플리케이션을 추가하려고 하면, 앱이름과 사업자명을 적게 되어있는데 크게 신경쓰지않고 적어도 된다! 필자는 으로 적고 넘어갔다.   애플리케이션을 생성하고 나면 에서 자신의 블로그 주소를 적어주자. 이 때, https://블로그주소.com/ 에서 마지막 는 빼줘야한다.   그러면 위와 같은 결과처럼 입력될 것이다. 이제 를 통해 을 만들어보자    을 누르면서 하다보면 아래와 같은 화면이 나타난다.   수 많은 탭과 기능이 보이지만 우리가 알아야 할 것은 이다.  다음 2편에 계속.. 참고자료 출처 Github Blog에 카카오톡 공유버튼 만들기 소셜기능 카카오 개발자센터","frontmatter":{"categories":"블로그-발전기","title":"React 블로그에 소셜기능 넣기 - 공유버튼 만들기(1)","date":"July 08, 2022"},"fields":{"slug":"/blog-social-feature-button1/"}}},{"node":{"id":"da977ffe-7f7d-55b0-a2e6-b645b6838951","excerpt":"블로그에 댓글 기능을 추가해보자 우리가 선택할 수 있는 패키지는 다음과 같다.   필자는 disqus는 광고가 달리는 댓글 서비스여서 배제하고 utterances를 이용해보고자 한다.  Github App 설치하기 먼저 깃허브 Marketplace > Apps > utterances를 검색하거나 utterances 설치페이지를 접속해보자     가격 플랜에 관한 설명이 나오지만 이기 때문에 걱정말고 설치해주자   가 아니라 를 만들어서 설치해주면 된다. ex) junwork123/blog-comments   왜냐면, utterance는 으로 동작한다. 댓글이 달리면 댓글용 레포지토리에 해당하는 포스트 이슈를 열고 댓글이 달리는 것처럼 내용이 연동되는 것이다.  이제 utterance 홈페이지에 접속해서 나만의 스크립트를 삽입해보자. 스크롤을 내리다가 부터 시작하면 된다.  댓글을 달면 이슈를 생성할 레포지토리 설정 파트다. 을 입력하면 된다.   두번째는 블로그 포스팅과 이슈간 연…","frontmatter":{"categories":"블로그-발전기","title":"블로그에 댓글 기능 추가하기 with utterances","date":"July 02, 2022"},"fields":{"slug":"/blog-append-reply-service/"}}},{"node":{"id":"a28bf56b-e44c-5380-b330-c88b4f9ce547","excerpt":"구글 서치콘솔(SearchConsole) 구글 서치콘솔은 우리 사이트가 구글에 더 많이 노출될 수 있도록 해주고, 각종 접속 통계를 제공하는 편리한 서비스이다. 구글 서치콘솔을 이용하려면 먼저 사이트맵 파일을 준비해야 한다. 필자의 블로그는 react 기반이므로 지킬(jekyll)이나 티스토리 같은 다른 플랫폼을 이용중이라면 사이트맵만 만들어서 돌아오자(다음 단계)  gatsby 사이트맵 패키지 설치 위의 패키지 말고도 다른 패키지가 있지만 필자는 gatsby를 사용하고 있기도 하고 인간친화적인 사이트맵 생성이라는 설명에 끌려서 을 선택했다. 다른 패키지가 써보고 싶다면 , 을 검색해보자  에 프로젝트 설정에 추가  빌드 후 사이트맵 확인 플러그인에 잘 적용했다면 빌드 후 로 접속하면  이와 같은 자신의 사이트맵을 볼 수 있다. 빌드 때마다 업데이트 되므로 매번 확인할 필요없다!  서치콘솔에 등록하기 구글 서치콘솔에 처음 접속하면 아래와 같은 팝업을 만나게 된다.  자신의 사이트가…","frontmatter":{"categories":"블로그-발전기","title":"블로그에 검색 엔진 최적화(SEO) 적용으로 검색유입 늘리기","date":"June 29, 2022"},"fields":{"slug":"/blog-google-search-console/"}}},{"node":{"id":"3486ce02-aa0c-5311-8f5c-e41d308ba4c4","excerpt":"자동 배포 권한을 얻기 위한 토큰 생성 먼저 GitHub 계정의 Developer settings 메뉴에서 토큰(Personal access tokens)을 만들어야 한다.    버튼을 누르게 되면, 아래와 같은 화면이 나타나지만 어려울 것 하나없다!  Note : 이 토큰의 목적(설명) Expiration : 토큰의 만료기간(최소 7일 / Custom - 년도지정 / No Expiration - 무제한) Select scopes : 이 토큰으로 할 수 있는 활동들(우리는 만 체크해도 된다.)  그리고 나서 우리는 발급받은 토큰을 해당 프로젝트에 등록하러 갈 것이다. 스크린샷을 따라 등록해보자    GitHub Action에서 yml 스크립트 작성하기 이제 배포할 로 가보자.   스크린샷 처럼  메뉴를 누르면 드디어 최종장에 돌입하게 된다. 필자는 이 메뉴 찾는데 10분이나 걸렸다 결론적으로 GitHub Action을 통한 자동 배포는 yml 스크립트를  위치에 작성해야 한다. 배…","frontmatter":{"categories":"블로그-발전기","title":"블로그 빌드 및 배포 자동화 - 2","date":"June 23, 2022"},"fields":{"slug":"/blog-build-deploy-2/"}}},{"node":{"id":"1b2f0560-894e-54b3-85eb-1cc0d9b1216f","excerpt":"마크다운 작성법 raw html 코드로 보면 이해가 더욱 쉽습니다. 출처 : 내 repository 1. 글머리 2. 인용문 3. 강조 4. 목록 5. 링크 및 이미지 6. 코드 1. 글머리 샵(#) 1개 샵(#) 2개 샵(#) 3개 샵(#) 4개 샵(#) 5개 샵(#) 6개, 이게 마지막 2. 인용문 “꺾쇠로 인용문을 표시한다”\n“꺾쇠로 인용문을 표시한다2” “꺾쇠 두번으로 중첩된 인용문을 표시한다3” 3. 강조 기울임 = 별표 한개, 언더바 한개 로 감싼다 두껍게 = 별표 두개, 언더바 두개 로 감싼다 두개를 같이 사용가능 취소선 = 물결표시 두개로 감싼다 밑줄 = u태그로 감싼다 인라인강조 =  4. 목록 순서가 필요한 목록 순서가 필요한 목록(서브) 순서가 필요하지 않은 목록에 사용 가능한 기호 대쉬(hyphen) 1개 별표(asterisks) 1개 더하기(plus sign) 1개 5. 링크 및 이미지 네이버, 대괄호(내용)+소괄호(링크)로 묶는다 6. 코드 `(grave …","frontmatter":{"categories":"how-to","title":"마크다운 작성법 정리","date":"June 20, 2022"},"fields":{"slug":"/How-to-writedown-with-md/"}}},{"node":{"id":"c883403c-0871-5d38-9b72-024e93098a85","excerpt":"사전준비 아래 코드를 터미널에서 실행시켜서 플러그인을 설치하자. 각각 설치하는 내용은 아래와 같다. P.S 이 스킨은 4.9.3버전까지만 동작하는듯 하다. (버전을 잘 확인하자) gatsby : 리액트(React) 기반의 정적 사이트 생성 프레임워크 gh-pages : GitHub Repository를 이용해 웹 사이트를 무료로 호스팅해주는 서비스 copyfiles : npm에서 파일 복사를 도와주는 패키지 (개인 도메인이 있는 경우) 개인 도메인 설정 필자처럼 개인 도메인(ooo.com, xxx.net)을 구매한 사람은 GitHub repository의 에서 접근 주소를 개인도메인으로 설정해줄 수 있다.  Source항목은 호스팅될 브랜치를 설정하는 곳으로 필자는  브랜치에서는 기능 추가와 포스트 작성, 에는 build 결과물을 배포(deploy)하도록 했다.  하지만 이 있는데, 매번 배포할 때마다 Custom Domain 항목이 초기화된다는 점이다. 이 문제는 도메인이 적힌 …","frontmatter":{"categories":"블로그-발전기","title":"블로그 빌드 및 배포 자동화 - 1","date":"June 20, 2022"},"fields":{"slug":"/blog-build-deploy/"}}},{"node":{"id":"d632a085-ac22-561b-80c5-4ebebcdc12a1","excerpt":"포스팅 기본 구조 파일이름 : index.md 로 설정해야 조회수 설정 등 플러그인이 작동함. emoji : 🔮 // 필수 아님 title : 이 블로그 스킨에 대한 이해 with React, GraphQL // 필수 date : ‘2021-06-18 00:00:00’ // 날짜(필수), 포맷 지켜야함 author : 주녘씨 // 작성자 tags : gatsby React GraphQL // 띄어쓰기로 구분 categories : featured // 블로그 카테고리 중 복수개 입력 블로그의 기본 설정 : gatsby-meta-config.js\n allMarkdownRemark, siteMetadata과 같은 메타데이터 설정 첫 index, about 페이지 설정 : /pages/*.js (중요) 포스팅 안에 으로 제목이 없으면 아래 오류 발생  (참고) 포스트 조회 Query 포스트의 주소(slug)는 자동생성된다. -> gatsby-nodes.js에서 생성 포스팅 기본 구조 (…","frontmatter":{"categories":"블로그-발전기","title":"이 블로그 스킨에 대한 이해 with React, GraphQL","date":"June 18, 2022"},"fields":{"slug":"/blog-understanding/"}}}]},"site":{"siteMetadata":{"language":"ko","author":{"name":"최준혁","bio":{"role":"개발자","description":["사람에 가치를 두는","능동적으로 일하는","이로운 것을 만드는"],"thumbnail":"sample.png"},"social":{"github":"https://github.com/junwork123","linkedIn":"","email":"junwork123@gmail.com"}}}}},"pageContext":{}},"staticQueryHashes":["1073350324","1956554647","2938748437","3350743975"]}