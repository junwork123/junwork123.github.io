{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/How-to-use-java/",
    "result": {"data":{"cur":{"id":"a2f351f7-d19d-5ab0-8d48-4e95b863edb1","html":"<p>지적과 댓글은 언제나 환영합니다!</p>\n<h2 id=\"index\" style=\"position:relative;\"><a href=\"#index\" aria-label=\"index permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>INDEX</h2>\n<p><a href=\"#string\">1. 문자열 관련</a></p>\n<p><a href=\"#collection\">2. Collection 관련</a></p>\n<p><a href=\"#cast\">3. 형 변환 관련</a></p>\n<p><a href=\"#json\">5. JSON 관련</a></p>\n<p><a href=\"#useful\">4. 유용한 함수</a></p>\n<p><br/><br/></p>\n<hr>\n<h2 id=\"문자열-관련span-idstringspan\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%9E%90%EC%97%B4-%EA%B4%80%EB%A0%A8span-idstringspan\" aria-label=\"문자열 관련span idstringspan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문자열 관련<span id=\"string\"></span></h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// 분자열 분리</span>\n<span class=\"token class-name\">StringTokenizer</span> st<span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringTokenizer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"문자열 입니다\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> st<span class=\"token punctuation\">.</span><span class=\"token function\">nextToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"문자열\"</span>\n<span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [\"문\", \"자\", \"열\"]</span></code></pre></div>\n<br>\n<hr>\n<h2 id=\"collection-관련span-idcollectionspan\" style=\"position:relative;\"><a href=\"#collection-%EA%B4%80%EB%A0%A8span-idcollectionspan\" aria-label=\"collection 관련span idcollectionspan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Collection 관련<span id=\"collection\"></span></h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">/* Header Library */</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Collection</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Set</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 급할떄만 쓰자</span>\n\n<span class=\"token comment\">/* Array */</span>\n    <span class=\"token comment\">// 선언</span>\n    <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> _arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>  \n    <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 합계</span>\n    <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\n    <span class=\"token comment\">// 출력</span>\n    <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">deepToString</span><span class=\"token punctuation\">(</span>arr2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 복사</span>\n    <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">copyOfRange</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 중복제거</span>\n    <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">A</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">distinct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/* List */</span>\n    <span class=\"token comment\">// 중복제거</span>\n    list<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">distinct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 정렬        </span>\n    <span class=\"token class-name\">Collections</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 오름차순        </span>\n    <span class=\"token class-name\">Collections</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Collections</span><span class=\"token punctuation\">.</span><span class=\"token function\">reverseOrder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 내림차순    </span>\n    <span class=\"token class-name\">Collections</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span>CASE_INSENSITIVE_ORDER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 오름차순 (대소문자 구분X)</span>\n\n    <span class=\"token comment\">// 최대, 최소</span>\n    <span class=\"token class-name\">Collections</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Collections</span><span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/* HashMap */</span>\n    <span class=\"token comment\">// 순회</span>\n    hashMap<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<hr>\n<h2 id=\"형-변환-관련span-idcastspan\" style=\"position:relative;\"><a href=\"#%ED%98%95-%EB%B3%80%ED%99%98-%EA%B4%80%EB%A0%A8span-idcastspan\" aria-label=\"형 변환 관련span idcastspan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>형 변환 관련<span id=\"cast\"></span></h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">/* 기본형 변환 */</span>\n    <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"10\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// String → int</span>\n    <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token class-name\">Character</span><span class=\"token punctuation\">.</span><span class=\"token function\">getNumericValue</span><span class=\"token punctuation\">(</span><span class=\"token char\">'10'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// char → int</span>\n    <span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> chars <span class=\"token operator\">=</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">toCharArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// String → char[]</span>\n\n<span class=\"token comment\">/* List&lt;String> → String[] */</span>\n    <span class=\"token class-name\">String</span> arr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n        <span class=\"token comment\">// new String[0] : 같은 크기, </span>\n        <span class=\"token comment\">// new String[list.size()+1] : null로 채워서 append</span>\n\n<span class=\"token comment\">/* String [] → List&lt;String> */</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 새로운 객체를 생성</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> list2 <span class=\"token operator\">=</span> <span class=\"token class-name\">Stream</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 스트림 사용</span>\n        <span class=\"token comment\">// Arrays.asList(arr) : 원본 배열을 참조하는 리스트 반환(같이 변경됨)</span>\n\n<span class=\"token comment\">/* int[] → List&lt;Integer> */</span>\n    <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> intList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        \n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> item <span class=\"token operator\">:</span> arr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        intList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        \n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 스트림 사용</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> intList <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span>\n                                <span class=\"token punctuation\">.</span><span class=\"token function\">boxed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>                        \n                                <span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<hr>\n<h2 id=\"json-span-idjsonspan\" style=\"position:relative;\"><a href=\"#json-span-idjsonspan\" aria-label=\"json span idjsonspan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSON <span id=\"json\"></span></h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fasterxml<span class=\"token punctuation\">.</span>jackson<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JsonProcessingException</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fasterxml<span class=\"token punctuation\">.</span>jackson<span class=\"token punctuation\">.</span>databind<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ObjectMapper</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">ObjectMapper</span> objectMapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ObjectMapper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// JSON을 Object로</span>\n<span class=\"token class-name\">Student</span> student <span class=\"token operator\">=</span> objectMapper<span class=\"token punctuation\">.</span><span class=\"token function\">readValue</span><span class=\"token punctuation\">(</span>jsonStr<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Student</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> studentArr <span class=\"token operator\">=</span> objectMapper<span class=\"token punctuation\">.</span><span class=\"token function\">readValue</span><span class=\"token punctuation\">(</span>jsonArrStr<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// JSON을 Map으로</span>\n<span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> jsonMap <span class=\"token operator\">=</span> objectMapper<span class=\"token punctuation\">.</span><span class=\"token function\">readValue</span><span class=\"token punctuation\">(</span>jsonStr<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeReference</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Object를 JSON으로</span>\n<span class=\"token class-name\">String</span> studentJson <span class=\"token operator\">=</span> objectMapper<span class=\"token punctuation\">.</span><span class=\"token function\">writeValueAsString</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">String</span> studentJson <span class=\"token operator\">=</span> objectMapper<span class=\"token punctuation\">.</span><span class=\"token function\">writeValueAsString</span><span class=\"token punctuation\">(</span>jsonMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<hr>\n<h2 id=\"유용한-함수span-idusefulspan\" style=\"position:relative;\"><a href=\"#%EC%9C%A0%EC%9A%A9%ED%95%9C-%ED%95%A8%EC%88%98span-idusefulspan\" aria-label=\"유용한 함수span idusefulspan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>유용한 함수<span id=\"useful\"></span></h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">\n<span class=\"token comment\">/* Graph 생성 */</span>\n    <span class=\"token comment\">// 단 방향 [출발노드,도착노드] 가 주어졌을 때</span>\n    <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> list<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 인접리스트 초기화</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 양방향 인접리스트</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> start<span class=\"token operator\">=</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        list<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        list<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<br>\n<hr>\n<p><em>출처</em></p>\n<p><em><a href=\"https://gwang920.github.io/java/Java-condingGrammer/\">gwang920님 블로그</a></em></p>\n<p><em><a href=\"https://hianna.tistory.com/551\">hianna님 블로그</a></em></p>\n<p><em><a href=\"https://velog.io/@hygge/Java-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8-%EB%AC%B8%EB%B2%95-%EC%86%8D%EC%84%B1-%EC%A0%95%EB%A6%AC\">hygge님 블로그</a></em></p>\n<br/>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#index\">INDEX</a></li>\n<li><a href=\"#%EB%AC%B8%EC%9E%90%EC%97%B4-%EA%B4%80%EB%A0%A8span-idstringspan\">문자열 관련<span id=\"string\"></span></a></li>\n<li><a href=\"#collection-%EA%B4%80%EB%A0%A8span-idcollectionspan\">Collection 관련<span id=\"collection\"></span></a></li>\n<li><a href=\"#%ED%98%95-%EB%B3%80%ED%99%98-%EA%B4%80%EB%A0%A8span-idcastspan\">형 변환 관련<span id=\"cast\"></span></a></li>\n<li><a href=\"#json-span-idjsonspan\">JSON <span id=\"json\"></span></a></li>\n<li><a href=\"#%EC%9C%A0%EC%9A%A9%ED%95%9C-%ED%95%A8%EC%88%98span-idusefulspan\">유용한 함수<span id=\"useful\"></span></a></li>\n</ul>\n</div>","excerpt":"지적과 댓글은 언제나 환영합니다! INDEX 1. 문자열 관련 2. Collection 관련 3. 형 변환 관련 5. JSON 관련 4. 유용한 함수  문자열 관련 Collection 관련 형 변환 관련 JSON  유용한 함수 출처 gwang920님 블로그 hianna님 블로그 hygge님 블로그 INDEX 문자열 관련 Collection 관련 형 변환 관련 JSON  유용한 함수","frontmatter":{"date":"September 16, 2022","title":"알고리즘에서 써먹는 자바(Java) 문법 정리","categories":"how-to","author":"주녁","emoji":"🔮"},"fields":{"slug":"/How-to-use-java/"}},"next":{"id":"5b921afe-b7ae-5f7a-b57d-6e1aa02ca796","html":"<p>지적과 댓글은 언제나 환영합니다!</p>\n<p><br/><br/></p>\n<h1 id=\"스프링-로그log를-파일로-남겨보자\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EB%A1%9C%EA%B7%B8log%EB%A5%BC-%ED%8C%8C%EC%9D%BC%EB%A1%9C-%EB%82%A8%EA%B2%A8%EB%B3%B4%EC%9E%90\" aria-label=\"스프링 로그log를 파일로 남겨보자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스프링 로그(Log)를 파일로 남겨보자</h1>\n<br/>\n<h2 id=\"로그는-왜-쓸까\" style=\"position:relative;\"><a href=\"#%EB%A1%9C%EA%B7%B8%EB%8A%94-%EC%99%9C-%EC%93%B8%EA%B9%8C\" aria-label=\"로그는 왜 쓸까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>로그는 왜 쓸까?</strong></h2>\n<p>로그는 소프트웨어의 이벤트를 기록하는 것으로</p>\n<p>Debug나 단순 콘솔 출력(print)에 비해 아래와 같은 장점이 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1. 자유로운 출력 위치와 형식\n2. 로그 레벨*에 따라 메시지 분리 가능\n    *Log Level : Fatal, Error, Warn, Debug, Info 등...\n3. 큰 코드 변경없이 환경조성 가능</code></pre></div>\n<br>\n<p>그렇다면 스프링에서 로그에 대해 어떤 방법을 사용할 수 있을까?</p>\n<br>\n<hr>\n<h2 id=\"두-가지-선택지\" style=\"position:relative;\"><a href=\"#%EB%91%90-%EA%B0%80%EC%A7%80-%EC%84%A0%ED%83%9D%EC%A7%80\" aria-label=\"두 가지 선택지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>두 가지 선택지</h2>\n<br>\n<p>2022년 현재, 스프링에서 가장 널리 쓰이는 인터페이스는</p>\n<p>slf4j이다.</p>\n<p><code class=\"language-text\">라이브러리</code>가 아니라 <code class=\"language-text\">인터페이스</code>이다.</p>\n<p>이 slf4j를 기반으로 구현한 <code class=\"language-text\">라이브러리</code>는</p>\n<p>대표적으로 <code class=\"language-text\">logback</code>과 <code class=\"language-text\">log4j2</code>가 있다.</p>\n<p>간략하게 차이점을 알아보자면</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">logback : Spring boot 기본 내장, 서버 재시작없이 설정변경 가능\n\nlog4j2 : 비동기 로그 출력 가능, 지연 연산* 가능, 멀티 쓰레드에서 우수함\n    *지연 연산(Lazy Evaluation) : 값 계산을 실행 직전까지 최대한 늦추는 기법</code></pre></div>\n<br>\n<p>자, 그렇다면 스프링에서 어떻게 사용할 수 있을까?</p>\n<br>\n<hr>\n<h2 id=\"실제-사용해보자\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%A0%9C-%EC%82%AC%EC%9A%A9%ED%95%B4%EB%B3%B4%EC%9E%90\" aria-label=\"실제 사용해보자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실제 사용해보자</h2>\n<br>\n<p>필자는 스프링에서 아래와 같이 사용하고 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Slf4j</span>\n<span class=\"token annotation punctuation\">@Service</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PingPongService</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ChatBotService</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Optional</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MessageTemplate</span><span class=\"token punctuation\">></span></span> makeResponse<span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"content = {}\"</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위 코드에서 딱 2가지만 확인하면 된다.</p>\n<p>첫 시작의 <code class=\"language-text\">@Slf4j</code>와 <code class=\"language-text\">log.info()</code>다.</p>\n<br>\n<p><code class=\"language-text\">@Slf4j</code> 어노테이션은 인터페이스로써</p>\n<p>현재 클래스에 큰 구조 변경없이 log 구현체를 추가해준다.</p>\n<p>(이 때, <code class=\"language-text\">logback 구현체가 default</code>로 사용된다.)</p>\n<br>\n<p>즉, <code class=\"language-text\">log</code>라는 멤버변수를 통해</p>\n<p><code class=\"language-text\">log.info()</code>, <code class=\"language-text\">log.debug()</code>, <code class=\"language-text\">log.error()</code> 등</p>\n<p><code class=\"language-text\">로그 관련 함수를 사용</code>할 수 있게 된다.</p>\n<p><img src=\"/f57387d03b2b49c72de717944123f530/log.png\" alt=\"결과화면\"></p>\n<p>위 결과화면을 보면 로그가 잘 출력된다.</p>\n<p>(의미는 조금 뒤에!)</p>\n<br>\n<p>그렇지만 한눈에 안들어오기도, 조금 심심하기도 하다.</p>\n<p>좋은 방법이 없을까?</p>\n<br/>\n<h2 id=\"로그에-색을-입혀보자\" style=\"position:relative;\"><a href=\"#%EB%A1%9C%EA%B7%B8%EC%97%90-%EC%83%89%EC%9D%84-%EC%9E%85%ED%98%80%EB%B3%B4%EC%9E%90\" aria-label=\"로그에 색을 입혀보자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>로그에 색을 입혀보자</strong></h2>\n<p><code class=\"language-text\">application.properties</code>에 가서</p>\n<p>아래 옵션을 넣어보자</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token comment\">#로그 색상 출력</span>\nspring.output.ansi.enabled=always</code></pre></div>\n<br>\n<p><img src=\"/46f96e00b2ba776567d5140443238289/log2.png\" alt=\"결과2\"></p>\n<p>어떠한가?</p>\n<p>로그가 한눈에 잘 들어온다.</p>\n<p>로그의 의미를 살펴보자면</p>\n<p>일반적으로 왼쪽부터 순서대로</p>\n<p><code class=\"language-text\">시간</code> - <code class=\"language-text\">로그레벨</code> - <code class=\"language-text\">프로세스번호</code> - <code class=\"language-text\">실행위치(클래스)</code> - <code class=\"language-text\">로그내용</code> 이다.</p>\n<p>색상과 순서를 변경할 수 있기도 하고,</p>\n<p>의미는 명확하기 때문에 어떤 항목이 있는지만 알면 된다.</p>\n<p><code class=\"language-text\">(외울 필요 X)</code></p>\n<br>\n<p>한편, 이런 생각을 해보자</p>\n<p>이 로그를 항상 쳐다보고 있어야 하는걸까?</p>\n<p>한달 전 로그를 다시 볼 순 없을까?</p>\n<br>\n<hr>\n<h2 id=\"로그를-파일로-출력해보자\" style=\"position:relative;\"><a href=\"#%EB%A1%9C%EA%B7%B8%EB%A5%BC-%ED%8C%8C%EC%9D%BC%EB%A1%9C-%EC%B6%9C%EB%A0%A5%ED%95%B4%EB%B3%B4%EC%9E%90\" aria-label=\"로그를 파일로 출력해보자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>로그를 파일로 출력해보자</strong></h2>\n<br>\n<p><code class=\"language-text\">application.properties</code>와 같은 위치에</p>\n<p><code class=\"language-text\">logback.xml</code>파일을 새로 만들어준다.</p>\n<p>(<code class=\"language-text\">logback</code>이라는 이름에 따라서 설정이 적용되므로 주의하자)</p>\n<br>\n<p>아래 코드는 필자가 사용하는 <code class=\"language-text\">logback 설정</code>이다.</p>\n<p>하나씩 의미를 알아보자</p>\n<br>\n<h3 id=\"기본-설정-및-code-classlanguage-text라이브-리로드code\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8-%EC%84%A4%EC%A0%95-%EB%B0%8F-code-classlanguage-text%EB%9D%BC%EC%9D%B4%EB%B8%8C-%EB%A6%AC%EB%A1%9C%EB%93%9Ccode\" aria-label=\"기본 설정 및 code classlanguage text라이브 리로드code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본 설정 및 <code class=\"language-text\">라이브 리로드</code></h3>\n<br>\n<p><code class=\"language-text\">configuration</code> 태그에 <code class=\"language-text\">라이브 리로드</code> 설정을 해줄 수 있다.</p>\n<p>서버 재시작 없이 로그 관련 설정을 갱신해준다.</p>\n<p>설정 변경 스캔 주기를 설정할 수 있다.</p>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span> <span class=\"token attr-name\">scan</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">scanPeriod</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>30 seconds<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!--여기에 내용 삽입 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<br>\n<p><code class=\"language-text\">configuration</code> 태그 안에</p>\n<p>후에 나올 내용들을 넣어주면 된다.</p>\n<p>(직접 해보길 추천한다.)</p>\n<br>\n<h3 id=\"code-classlanguage-text콘솔-출력code-정의\" style=\"position:relative;\"><a href=\"#code-classlanguage-text%EC%BD%98%EC%86%94-%EC%B6%9C%EB%A0%A5code-%EC%A0%95%EC%9D%98\" aria-label=\"code classlanguage text콘솔 출력code 정의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">콘솔 출력</code> 정의</h3>\n<br>\n<p><code class=\"language-text\">STDOUT</code>이라는 이름으로 <code class=\"language-text\">출력할 형식(appender)</code>을 정의했다.</p>\n<p><code class=\"language-text\">ConsoleAppender</code>로 콘솔에 출력하도록 했다.</p>\n<p><code class=\"language-text\">STDOUT</code>에 사용할 <code class=\"language-text\">메시지 형식(pattern)</code>을 정의했다.</p>\n<p><code class=\"language-text\">pattern</code>은 날짜 - 레벨 - 클래스 - 메시지 순이다.</p>\n<p>(색상지정 등 자세한 설명은 <a href=\"https://logback.qos.ch/manual/layouts.html#coloring\">공식문서 참조</a>)</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\">    <span class=\"token comment\">&lt;!-- 콘솔 로그 설정 --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>appender</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>STDOUT<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ch.qos.logback.core.ConsoleAppender<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>encoder</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pattern</span><span class=\"token punctuation\">></span></span>%d{yyyy-MM-dd HH:mm:ss.SSS} %highlight(%-5level) %cyan(%logger{15}) : %msg%n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pattern</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>encoder</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>appender</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<br>\n<h3 id=\"code-classlanguage-text파일-출력code-정의\" style=\"position:relative;\"><a href=\"#code-classlanguage-text%ED%8C%8C%EC%9D%BC-%EC%B6%9C%EB%A0%A5code-%EC%A0%95%EC%9D%98\" aria-label=\"code classlanguage text파일 출력code 정의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">파일 출력</code> 정의</h3>\n<br>\n<p><code class=\"language-text\">LOGS_ABSOLUTE_PATH</code>라는 이름으로 출력 위치를 정해주었다.</p>\n<p><code class=\"language-text\">FILE</code>이라는 형식(appender)을 정의헀다.</p>\n<p><code class=\"language-text\">RollingFileAppender</code>로 파일에 출력하도록 했다.</p>\n<p><code class=\"language-text\">ThresholdFilter</code>필터로 DEBUG 레벨 이상만 출력하도록 헀다.</p>\n<p><code class=\"language-text\">file</code> 위치와 이름을 정해주었다.</p>\n<p><code class=\"language-text\">rollingPolicy</code>로 <code class=\"language-text\">TimeBasedRollingPolicy</code>를 지정했는데</p>\n<p>이는 1개당 최대 100MB의 파일로 <code class=\"language-text\">(maxFileSize)</code></p>\n<p>최대 30개까지 로그를 유지하고 <code class=\"language-text\">(maxHistory)</code></p>\n<p>총합 3GB를 넘지 않도록 설정했다. <code class=\"language-text\">(totalSizeCap)</code></p>\n<p><code class=\"language-text\">메시지 형식(pattern)</code>도 로그레벨 - 날짜 - 클래스 - 메시지 순으로 정의했다.</p>\n<p><code class=\"language-text\">이 때는 텍스트 파일 출력이므로, 색상을 지정할 수 없다.</code></p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\">    <span class=\"token comment\">&lt;!-- 파일 로그 설정 --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LOGS_ABSOLUTE_PATH<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>./logs<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>appender</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>FILE<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ch.qos.logback.core.rolling.RollingFileAppender<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>filter</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ch.qos.logback.classic.filter.ThresholdFilter<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>level</span><span class=\"token punctuation\">></span></span>DEBUG<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>level</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>filter</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>file</span><span class=\"token punctuation\">></span></span>${LOGS_ABSOLUTE_PATH}/logback.log<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>file</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>rollingPolicy</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ch.qos.logback.core.rolling.TimeBasedRollingPolicy<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token comment\">&lt;!-- rollover daily --></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fileNamePattern</span><span class=\"token punctuation\">></span></span>${LOGS_ABSOLUTE_PATH}/logback-%d{yyyy-MM-dd}.%i.log<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>fileNamePattern</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>maxHistory</span><span class=\"token punctuation\">></span></span>30<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>maxHistory</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>totalSizeCap</span><span class=\"token punctuation\">></span></span>3GB<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>totalSizeCap</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>timeBasedFileNamingAndTriggeringPolicy</span>\n                    <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token comment\">&lt;!-- or whenever the file size reaches 100MB --></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>maxFileSize</span><span class=\"token punctuation\">></span></span>100MB<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>maxFileSize</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>timeBasedFileNamingAndTriggeringPolicy</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>rollingPolicy</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>encoder</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pattern</span><span class=\"token punctuation\">></span></span>[%-5level] %d{HH:mm:ss.SSS} %logger{36} - %msg%n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pattern</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>encoder</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>appender</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<br>\n<h3 id=\"출력-설정\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5-%EC%84%A4%EC%A0%95\" aria-label=\"출력 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력 설정</h3>\n<p>기본적으로 출력할 로그레벨은 <code class=\"language-text\">DEBUG</code> 이상으로 지정했다.</p>\n<p>이 때, 위에서 정의한 <code class=\"language-text\">STDOUT</code>형식으로 콘솔 출력을,</p>\n<p><code class=\"language-text\">FILE</code> 형식으로 파일 출력을 할 수 있도록 했다.</p>\n<p>logger는 특정 패키지에만 적용할 수 있도록 하는 부분이다.</p>\n<p><code class=\"language-text\">응용하면 특정 패키지의 로그만 특정 파일에 출력하도록 할 수 있다.</code></p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>root</span> <span class=\"token attr-name\">level</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>DEBUG<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!--     참조할 appender 설정 - STDOUT --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>appender-ref</span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>STDOUT<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>appender-ref</span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>FILE<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>root</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token comment\">&lt;!-- log 레벨 설정 (org.springframework=debug)\n    &lt;logger name=\"org.springframework\" level=\"DEBUG\">\n        &lt;appender-ref ref=\"FILE\" />\n    &lt;/logger>\n    --></span></code></pre></div>\n<br>\n<h3 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h3>\n<p>logback.xml 완성 후 Spring을 실행해보면</p>\n<p>최상위 위치에 <code class=\"language-text\">./logs</code> 폴더가 생기고</p>\n<p>로그가 파일로 저장되는 것을 확인할 수 있다.</p>\n<p>추가적으로 개발 환경마다(local, dev, product 등)</p>\n<p>로그를 다르게 세팅하는 것도 가능하다.</p>\n<p>한편, 오픈소스인 <code class=\"language-text\">LogStash</code>를 사용하면</p>\n<p>네트워크를 통해 로그를 저장하는 것도 가능하다.</p>\n<p>(추후 포스팅 예정)</p>\n<p><em>출처</em></p>\n<p><em><a href=\"https://loosie.tistory.com/829\">loosie님 블로그</a></em></p>\n<p><em><a href=\"https://minkwon4.tistory.com/161\">minkwon4님 블로그</a></em></p>\n<p>_<a href=\"https://www.fwantastic.com/2019/12/javautillogging-vs-log4j-vs-slf4j.html\">fwantastic님 블로그</a>\n<br/></p>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EB%A1%9C%EA%B7%B8%EB%8A%94-%EC%99%9C-%EC%93%B8%EA%B9%8C\"><strong>로그는 왜 쓸까?</strong></a></p>\n</li>\n<li>\n<p><a href=\"#%EB%91%90-%EA%B0%80%EC%A7%80-%EC%84%A0%ED%83%9D%EC%A7%80\">두 가지 선택지</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%8B%A4%EC%A0%9C-%EC%82%AC%EC%9A%A9%ED%95%B4%EB%B3%B4%EC%9E%90\">실제 사용해보자</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%A1%9C%EA%B7%B8%EC%97%90-%EC%83%89%EC%9D%84-%EC%9E%85%ED%98%80%EB%B3%B4%EC%9E%90\"><strong>로그에 색을 입혀보자</strong></a></p>\n</li>\n<li>\n<p><a href=\"#%EB%A1%9C%EA%B7%B8%EB%A5%BC-%ED%8C%8C%EC%9D%BC%EB%A1%9C-%EC%B6%9C%EB%A0%A5%ED%95%B4%EB%B3%B4%EC%9E%90\"><strong>로그를 파일로 출력해보자</strong></a></p>\n<ul>\n<li><a href=\"#%EA%B8%B0%EB%B3%B8-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EB%9D%BC%EC%9D%B4%EB%B8%8C-%EB%A6%AC%EB%A1%9C%EB%93%9C\">기본 설정 및 <code class=\"language-text\">라이브 리로드</code></a></li>\n<li><a href=\"#%EC%BD%98%EC%86%94-%EC%B6%9C%EB%A0%A5-%EC%A0%95%EC%9D%98\"><code class=\"language-text\">콘솔 출력</code> 정의</a></li>\n<li><a href=\"#%ED%8C%8C%EC%9D%BC-%EC%B6%9C%EB%A0%A5-%EC%A0%95%EC%9D%98\"><code class=\"language-text\">파일 출력</code> 정의</a></li>\n<li><a href=\"#%EC%B6%9C%EB%A0%A5-%EC%84%A4%EC%A0%95\">출력 설정</a></li>\n<li><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\">마무리</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"August 30, 2022","title":"스프링 로그를 파일로 남겨보자(logback, Slf4j)","categories":"Spring","author":"주녁","emoji":"🔮"},"fields":{"slug":"/Spring-create-log-files/"}},"prev":{"id":"b49134e5-4ef3-576a-b9e1-04698fa69316","html":"<p>지적과 댓글은 언제나 환영합니다!</p>\n<p><br/><br/></p>\n<h1 id=\"시작에-앞서\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EC%9E%91%EC%97%90-%EC%95%9E%EC%84%9C\" aria-label=\"시작에 앞서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시작에 앞서</h1>\n<p>이야기를 하기 전, 탄생 배경에 대해 알고가면 더욱 좋다.</p>\n<p>HTTP 프로토콜은 <code class=\"language-text\">비연결성(Connectionless)</code>, <code class=\"language-text\">무상태성(Stateless)</code>을 가지기 때문에\n클라이언트가 누구인지 저장하지 않는다.\n때문에 <u>매 요청마다 사용자, 권한 등을 확인해야 한다.</u></p>\n<p>이러한 특성을 보완하기 위해서 쿠키, 캐시와 같은 개념이 등장헀다.</p>\n<br/>\n<hr>\n<h2 id=\"쿠키cookie\" style=\"position:relative;\"><a href=\"#%EC%BF%A0%ED%82%A4cookie\" aria-label=\"쿠키cookie permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>쿠키(Cookie)</strong></h2>\n<p>쿠키는 <code class=\"language-text\">사용자의 브라우저에 저장</code>되고, <code class=\"language-text\">HTTP 헤더에 포함</code>되는 <code class=\"language-text\">텍스트 데이터 파일</code>이다.</p>\n<p>쿠키는 아래와 같이 <code class=\"language-text\">1개의 데이터쌍</code>과 <code class=\"language-text\">4개의 속성</code>으로 구성되어 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">Set-Cookie</span><span class=\"token punctuation\">:</span> name=value; expires=<span class=\"token punctuation\">[</span>Date<span class=\"token punctuation\">]</span>; domain=<span class=\"token punctuation\">[</span>Domain<span class=\"token punctuation\">]</span>; path=<span class=\"token punctuation\">[</span>Path<span class=\"token punctuation\">]</span>; <span class=\"token punctuation\">[</span>Secure<span class=\"token punctuation\">]</span>\n</code></pre></div>\n<ul>\n<li><code class=\"language-text\">expires</code> : 쿠키의 유효기간, 유효기간이 지나면 파일이 남더라도 브라우저에서 읽을 수 없다.</li>\n<li><code class=\"language-text\">domain</code> : 쿠키를 전송할 도메인, 하나의 도메인 당 20개의 값만 가질 수 있다.</li>\n<li><code class=\"language-text\">path</code> = 쿠키를 전송할 경로, 경로를 <code class=\"language-text\">/</code>로 설정하면 모든페이지에서, <code class=\"language-text\">/example</code>로 설정하면 그 페이지 이하의 페이지에서 읽을 수 있다.</li>\n<li><code class=\"language-text\">secure</code> : 쿠키를 전송할 보안 전송 방법, 그러나 쿠키는 위험하지 않은 데이터를 전달하기 때문에 잘 사용하지 않는다.</li>\n</ul>\n<br>\n<h3 id=\"그렇다면-쿠키는-언제-생성될까\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%A0%87%EB%8B%A4%EB%A9%B4-%EC%BF%A0%ED%82%A4%EB%8A%94-%EC%96%B8%EC%A0%9C-%EC%83%9D%EC%84%B1%EB%90%A0%EA%B9%8C\" aria-label=\"그렇다면 쿠키는 언제 생성될까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>그렇다면 쿠키는 언제 생성될까?</strong></h3>\n<p>답은 <u>클라이언트가 페이지에 접속할 때, 서버에서 HTTP 헤더에 쿠키를 포함시켜 응답한다.</u></p>\n<p>클라이언트 측에서는 만료기간까지 보관하고 있다가, 같은 요청이 발생하면 쿠키를 함께 서버에 보낸다. 만약, 변경이 필요하다면 쿠키를 업데이트하여 응답한다.</p>\n<br>\n<h3 id=\"쿠키의-예시\" style=\"position:relative;\"><a href=\"#%EC%BF%A0%ED%82%A4%EC%9D%98-%EC%98%88%EC%8B%9C\" aria-label=\"쿠키의 예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>쿠키의 예시</strong></h3>\n<br>\n<p><code class=\"language-text\">장바구니</code></p>\n<p><code class=\"language-text\">팝업 다시보지 않기</code></p>\n<p><code class=\"language-text\">ID/PW 기억하기</code></p>\n<br>\n<hr>\n<h2 id=\"세션session\" style=\"position:relative;\"><a href=\"#%EC%84%B8%EC%85%98session\" aria-label=\"세션session permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>세션(Session)</strong></h2>\n<p>왜 쿠키 다음에 세션을 소개할까?</p>\n<p>그 이유는 바로 세션이 <code class=\"language-text\">서버에 저장되는 쿠키</code>이기 때문이다.</p>\n<p>세션은 클라이언트가 <code class=\"language-text\">브라우저를 종료할 때까지 유지</code>된다.\n그렇기 때문에 클라이언트를 구별하기 위한 <code class=\"language-text\">고유 세션 ID를 부여</code>한다.\n또한, 클라이언트가 일정시간 응답이 없다면 유지되지 않도록 할 수 있다.</p>\n<p><code class=\"language-text\">서버에 직접 저장</code>되므로 보안성이 높다.\n하지만 서버의 메모리에 영향을 주기 때문에 <code class=\"language-text\">성능 저하의 요인</code>이 될 수 있다.</p>\n<br>\n<h3 id=\"그렇다면-세션은-언제-생성될까\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%A0%87%EB%8B%A4%EB%A9%B4-%EC%84%B8%EC%85%98%EC%9D%80-%EC%96%B8%EC%A0%9C-%EC%83%9D%EC%84%B1%EB%90%A0%EA%B9%8C\" aria-label=\"그렇다면 세션은 언제 생성될까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>그렇다면 세션은 언제 생성될까?</strong></h3>\n<p>세션은 클라이언트가 <u>서버에 접속할 때, 서버는 고유 세션 ID를 발급하고 저장</u>한다.</p>\n<p>클라이언트는 서버에 요청할 때, 이 세션 ID를 같이 전달한다.</p>\n<p>전달받은 세션은 별다른 작업을 요구하지 않지만, 클라이언트의 정보를 담고 있다.</p>\n<br>\n<h3 id=\"세션의-예시\" style=\"position:relative;\"><a href=\"#%EC%84%B8%EC%85%98%EC%9D%98-%EC%98%88%EC%8B%9C\" aria-label=\"세션의 예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>세션의 예시</strong></h3>\n<br>\n<p><code class=\"language-text\">로그아웃 전까지 로그인 유지</code></p>\n<br>\n<hr>\n<h2 id=\"캐시cache\" style=\"position:relative;\"><a href=\"#%EC%BA%90%EC%8B%9Ccache\" aria-label=\"캐시cache permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>캐시(Cache)</strong></h2>\n<p>캐시는 쿠키, 세션과는 역할이 조금 다르다.</p>\n<p>캐시는 이미지, 오디오, 소스코드, CSS 등 <code class=\"language-text\">접근 비용이 비싼 데이터를 저장</code>해두었다가, 동일한 요청이 있을 때 <code class=\"language-text\">재요청하지 않고 데이터를 제공</code>할 수 있게 하는 <code class=\"language-text\">임시 저장소</code>이다.</p>\n<p>로고나 버튼이미지, 검색창 같이 <code class=\"language-text\">다시 사용될 가능성이 높은 요소</code>를 캐시로 저장하면 서버의 부하(Load), 대역폭의 부담을 줄이고, 최종적으로 <code class=\"language-text\">사용자에게 전달하는 속도를 높일 수 있다.</code></p>\n<p>다시 사용될 가능성이 높은 요소를 선정했기 때문에 항상 캐시가 사용되지 않는다. 따라서 리소스 요청이 이전에 왔던 것과 같은 게 있다면, <code class=\"language-text\">캐시 적중(Cache Hit)</code>, 웹서버로 처음 요청된 리소스라면, <code class=\"language-text\">캐시 부적중(Cache Miss)</code>라고 한다.</p>\n<br>\n<p>한편, 한번 캐시에 저장되면 서버에서 변경해도, 사용자는 변경되지 않은 것처럼 보일 수 있다.\n로고나 이미지가 바뀐것을 어떻게 알 수 있을까?</p>\n<h3 id=\"그렇다면-캐시는-언제-생성될까\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%A0%87%EB%8B%A4%EB%A9%B4-%EC%BA%90%EC%8B%9C%EB%8A%94-%EC%96%B8%EC%A0%9C-%EC%83%9D%EC%84%B1%EB%90%A0%EA%B9%8C\" aria-label=\"그렇다면 캐시는 언제 생성될까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>그렇다면 캐시는 언제 생성될까?</strong></h3>\n<p>캐시는 아래 7단계를 거쳐 생성된다.</p>\n<p><code class=\"language-text\">요청받기</code> > <code class=\"language-text\">파싱</code> > <code class=\"language-text\">검색</code> > <code class=\"language-text\">신선도검사</code> > <code class=\"language-text\">응답생성</code> > <code class=\"language-text\">전송</code> > <code class=\"language-text\">로깅</code></p>\n<br>\n<ol>\n<li>\n<p><code class=\"language-text\">요청받기</code> : 클라이언트에서 네트워크 연결이 시작되면 요청 데이터를 읽어들인다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">파싱</code> : 요청 메시지를 캐싱 소프트웨어를 이용해 헤더 부분을 자료구조에 담는다(ex. dictionary)</p>\n</li>\n<li>\n<p><code class=\"language-text\">검색</code> : 요청 URL에 해당하는 로컬 사본을 검색한다. 사본의 위치는 메모리, 디스크, 로컬 컴퓨터 등 다양한 위치가 될 수 있다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">신선도 검사</code> : 캐시가 적중(Hit)한 경우, <a href=\"https://feel5ny.github.io/2019/10/05/HTTP_007-2/#algorithm\">신선도 검사 알고리즘</a>을 통해 캐시가 유효한지 검사한다.</p>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\">$충분히_신선한가 = $나이 &lt; $신선도_수명</code></pre></div>\n<ul>\n<li>\n<p>$나이 : 서버가 문서를 보낸 후(혹은 서버가 마지막으로 재검사한 후) 그 문서가 나이를 먹은 시간의 총합이다.</p>\n</li>\n<li>\n<p>$신선도_수명 : 서버와 클라이언트의 제약조건에 의존한다. 일반적으로 서버는 얼마나 자주 발행되었는지에 대한 정보를, 클라이언트는 최신 콘텐츠에 대한 요구를 제약조건으로 설정한다.</p>\n</li>\n</ul>\n<br>\n<ol start=\"5\">\n<li>\n<p><code class=\"language-text\">응답 생성</code> : 캐시가 신선하다면, 캐시의 오래된 헤더에 <code class=\"language-text\">신선도 정보(Cache-Control, Age, Expires 헤더)를 삽입</code>한다. Date 헤더는 최초 생성 정보이기 때문에 수정하면 안된다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">전송</code> :</p>\n</li>\n<li>\n<p><code class=\"language-text\">로깅</code> : 캐시 전송 후 캐시 Hit, Miss에 대한 통계를 작성하고, 로그 파일에 요청 종류, URL, 작업 내용을 기록한다.</p>\n</li>\n</ol>\n<br>\n<hr>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h2>\n<p>자, 이제 쿠키, 세션, 캐시에 대해 설명할 수 있는가?</p>\n<p>쿠키와 세션, 캐시 모두 적절히 사용하면 약이 되지만, 과하게 의존한다면 독이 될 수 있다.</p>\n<p>다음에는 인증과 인가, JWT에 대한 내용을 다뤄보겠다.</p>\n<p><br/><br/></p>\n<p><em>출처</em></p>\n<p><em><a href=\"https://interconnection.tistory.com/74\">RyanGomdoriPooh님 블로그</a></em></p>\n<p><em><a href=\"https://ychcom.tistory.com/entry/%EC%BF%A0%ED%82%A4Cookie%EB%9E%80\">ychcom님 블로그</a></em></p>\n<p><em><a href=\"https://feel5ny.github.io/2019/10/05/HTTP_007-2/#algorithm\">feel5ny님 블로그</a></em></p>\n<br/>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EC%BF%A0%ED%82%A4cookie\"><strong>쿠키(Cookie)</strong></a></p>\n<ul>\n<li><a href=\"#%EA%B7%B8%EB%A0%87%EB%8B%A4%EB%A9%B4-%EC%BF%A0%ED%82%A4%EB%8A%94-%EC%96%B8%EC%A0%9C-%EC%83%9D%EC%84%B1%EB%90%A0%EA%B9%8C\"><strong>그렇다면 쿠키는 언제 생성될까?</strong></a></li>\n<li><a href=\"#%EC%BF%A0%ED%82%A4%EC%9D%98-%EC%98%88%EC%8B%9C\"><strong>쿠키의 예시</strong></a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%84%B8%EC%85%98session\"><strong>세션(Session)</strong></a></p>\n<ul>\n<li><a href=\"#%EA%B7%B8%EB%A0%87%EB%8B%A4%EB%A9%B4-%EC%84%B8%EC%85%98%EC%9D%80-%EC%96%B8%EC%A0%9C-%EC%83%9D%EC%84%B1%EB%90%A0%EA%B9%8C\"><strong>그렇다면 세션은 언제 생성될까?</strong></a></li>\n<li><a href=\"#%EC%84%B8%EC%85%98%EC%9D%98-%EC%98%88%EC%8B%9C\"><strong>세션의 예시</strong></a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%BA%90%EC%8B%9Ccache\"><strong>캐시(Cache)</strong></a></p>\n<ul>\n<li><a href=\"#%EA%B7%B8%EB%A0%87%EB%8B%A4%EB%A9%B4-%EC%BA%90%EC%8B%9C%EB%8A%94-%EC%96%B8%EC%A0%9C-%EC%83%9D%EC%84%B1%EB%90%A0%EA%B9%8C\"><strong>그렇다면 캐시는 언제 생성될까?</strong></a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\">마무리</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"September 17, 2022","title":"쿠키(Cookie)와 캐시(Cache), 세션(Session)의 차이를 아시나요?","categories":"knowledge","author":"주녁","emoji":"🔮"},"fields":{"slug":"/knowledge-about-Cookie-and-Cache/"}},"site":{"siteMetadata":{"siteUrl":"https://www.junwork.net","comments":{"utterances":{"repo":"junwork123/blog-comments"}}}}},"pageContext":{"slug":"/How-to-use-java/","nextSlug":"/Spring-create-log-files/","prevSlug":"/knowledge-about-Cookie-and-Cache/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}