{"componentChunkName":"component---src-templates-blog-template-js","path":"/How-to-use-intelliJ/","result":{"data":{"cur":{"id":"668c5952-ba78-5ace-9560-65dcf2da81a7","html":"<h1 id=\"인텔리제이intellij-사용법-정리\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%ED%85%94%EB%A6%AC%EC%A0%9C%EC%9D%B4intellij-%EC%82%AC%EC%9A%A9%EB%B2%95-%EC%A0%95%EB%A6%AC\" aria-label=\"인텔리제이intellij 사용법 정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인텔리제이(intelliJ) 사용법 정리</h1>\n<h2 id=\"코드-축약어\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C-%EC%B6%95%EC%95%BD%EC%96%B4\" aria-label=\"코드 축약어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>코드 축약어</strong></h2>\n<p><code class=\"language-text\">psvm</code> → public static void main 자동 생성</p>\n<p><code class=\"language-text\">sout / soutv / soutm</code> →  System.<em>out</em>.println() 자동 생성</p>\n<p><code class=\"language-text\">/** + enter</code> = 자동 주석 생성(javadoc 형식)</p>\n<p><code class=\"language-text\">iter + enter</code> = foreach문 자동 생성</p>\n<p><br/><br/></p>\n<h2 id=\"단축키\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EC%B6%95%ED%82%A4\" aria-label=\"단축키 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>단축키</strong></h2>\n<p><code class=\"language-text\">Shift 2번</code> : 검색창 띄우기</p>\n<p><code class=\"language-text\">Shift + F6</code> : Rename</p>\n<p><code class=\"language-text\">Ctrl + E</code> : 최근 열어본 페이지 목록</p>\n<p><code class=\"language-text\">Ctrl + Alt + Shift + T</code> : 특정부분만 추출해서 메소드로 만들기</p>\n<p><code class=\"language-text\">Ctrl + Alt + I</code> : 코드 인덴트 정리</p>\n<p><code class=\"language-text\">Ctrl + Alt + V</code> : 반환형에 맞게 변수로 추출(extract)</p>\n<p><code class=\"language-text\">Ctrl + Alt + M</code> : 코드 블럭을 메소드로 추출(extract)</p>\n<p><code class=\"language-text\">Alt + Insert</code> : Getter/Setter 코드 생성</p>\n<p><code class=\"language-text\">Ctrl + Shift + T</code> : 클래스 테스트 생성</p>\n<p><code class=\"language-text\">Ctrl + O</code> : 오버라이드 메소드 호출</p>\n<p><code class=\"language-text\">Shift + F10</code> : 재시작(Stop &#x26; Rerun)</p>\n<p><code class=\"language-text\">Alt + 1</code> : 프로젝트 목록창으로 포커스 이동</p>\n<p><code class=\"language-text\">ESC</code> : 다시 코드 에디터로 포커스 이동</p>\n<p><br/><br/></p>\n<p><em>참고자료</em></p>\n<p><em><a href=\"https://jaimemin.tistory.com/1549\">jaimemi님 블로그</a></em></p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EC%BD%94%EB%93%9C-%EC%B6%95%EC%95%BD%EC%96%B4\"><strong>코드 축약어</strong></a></li>\n<li><a href=\"#%EB%8B%A8%EC%B6%95%ED%82%A4\"><strong>단축키</strong></a></li>\n</ul>\n</div>","excerpt":"인텔리제이(intelliJ) 사용법 정리 코드 축약어  → public static void main 자동 생성  →  System.out.println() 자동 생성  = 자동 주석 생성(javadoc 형식)  = foreach문 자동 생성  단축키  : 검색창 띄우기  : Rename  : 최근 열어본 페이지 목록  : 특정부분만 추출해서 메소드로 만들기  : 코드 인덴트 정리  : 반환형에 맞게 변수로 추출(extract)  : 코드 블럭을 메소드로 추출(extract)  : Getter/Setter 코드 생성  : 클래스 테스트 생성  : 오버라이드 메소드 호출  : 재시작(Stop & Rerun)  : 프로젝트 목록창으로 포커스 이동  : 다시 코드 에디터로 포커스 이동  참고자료 jaimemi님 블로그 코드 축약어 단축키","frontmatter":{"date":"July 23, 2022","title":"인텔리제이(intelliJ) 사용법 정리","categories":"how-to","author":"주녘씨","emoji":"🔮"},"fields":{"slug":"/How-to-use-intelliJ/"}},"next":{"id":"ccb9cb8f-a475-527a-93dd-eb5818cd9c4e","html":"<p>지적과 댓글은 언제나 환영합니다!</p>\n<p><br/><br/></p>\n<h1 id=\"생성자-주입을-써야하는-이유\" style=\"position:relative;\"><a href=\"#%EC%83%9D%EC%84%B1%EC%9E%90-%EC%A3%BC%EC%9E%85%EC%9D%84-%EC%8D%A8%EC%95%BC%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\" aria-label=\"생성자 주입을 써야하는 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>생성자 주입을 써야하는 이유</h1>\n<br/>\n<h2 id=\"불변\" style=\"position:relative;\"><a href=\"#%EB%B6%88%EB%B3%80\" aria-label=\"불변 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>불변</strong></h2>\n<p>생성자 주입을 사용하면 애플리케이션 종료까지 의존관계를 변경할 수 없다.</p>\n<p>대부분의 의존관계는 애플리케이션 종료까지 변하지 않아야 좋은 설계라고 할 수 있다.</p>\n<p>때문에 생성자 주입을 사용해야 한다.</p>\n<p>다른 주입방식은 public으로 열어놔야 하기 때문에 수정의 우려가 있어 좋은 설계방법이 아니다.</p>\n<p><br/><br/></p>\n<h2 id=\"누락방지\" style=\"position:relative;\"><a href=\"#%EB%88%84%EB%9D%BD%EB%B0%A9%EC%A7%80\" aria-label=\"누락방지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>누락방지</strong></h2>\n<p>final 키워드 사용으로 생성자에서 혹시라도 값이 설정되지 않는 오류를 컴파일 시점에서 검출할 수 있다. 다른 주입 방식은 생성자 호출 이후에 주입되므로 final 키워드를 사용할 수 없다.</p>\n<p>DI란 외부에서 두 객체 간의 관계를 결정해주는 디자인 패턴으로, 인터페이스를 사이에 둬서 클래스 레벨에서는 의존관계가 고정되지 않도록 하고 런타임 시에 관계를 다이나믹하게 주입하여 유연성을 확보하고 결합도를 낮출 수 있게 해준다.</p>\n<ul>\n<li>OCP 원칙을 지키며 객체의 불변성을 확보할 수 있다.</li>\n<li>테스트 코드의 작성이 용이해진다.</li>\n<li>final 키워드를 사용할 수 있고, Lombok과의 결합을 통해 코드를 간결하게 작성할 수 있다.</li>\n<li>순환 참조 문제를 를 애플리케이션 구동(객체의 생성) 시점에 파악하여 방지할 수 있다.</li>\n</ul>\n<p>이러한 이유들로 우리는 DI 프레임워크를 사용하는 경우, 생성자 주입을 사용하는 것이 좋다.</p>\n<p><em>출처</em></p>\n<p><em><a href=\"https://mangkyu.tistory.com/125\">mangkyu님 블로그</a></em></p>\n<p><em><a href=\"https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81-mvc-1#\">인프런 스프링 MVC 강의 1편</a></em></p>\n<p><em><a href=\"https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81-%ED%95%B5%EC%8B%AC-%EC%9B%90%EB%A6%AC-%EA%B8%B0%EB%B3%B8%ED%8E%B8/\">인프런 스프링 핵심 원리 기본편</a></em></p>\n<br/>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EB%B6%88%EB%B3%80\"><strong>불변</strong></a></li>\n<li><a href=\"#%EB%88%84%EB%9D%BD%EB%B0%A9%EC%A7%80\"><strong>누락방지</strong></a></li>\n</ul>\n</div>","frontmatter":{"date":"July 23, 2022","title":"스프링 생성자 주입을 써야하는 이유","categories":"Spring","author":"주녘씨","emoji":"🔮"},"fields":{"slug":"/Spring-Learn-Why-Use-DI/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://www.junwork.net","comments":{"utterances":{"repo":"junwork123/blog-comments"}}}}},"pageContext":{"slug":"/How-to-use-intelliJ/","nextSlug":"/Spring-Learn-Why-Use-DI/","prevSlug":""}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}