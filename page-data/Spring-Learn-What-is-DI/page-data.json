{"componentChunkName":"component---src-templates-blog-template-js","path":"/Spring-Learn-What-is-DI/","result":{"data":{"cur":{"id":"658d2d6f-755a-597e-8bb8-de83ccb4e5a8","html":"<p>지적과 댓글은 언제나 환영합니다!</p>\n<p><br/><br/></p>\n<h1 id=\"의존성-주입이란\" style=\"position:relative;\"><a href=\"#%EC%9D%98%EC%A1%B4%EC%84%B1-%EC%A3%BC%EC%9E%85%EC%9D%B4%EB%9E%80\" aria-label=\"의존성 주입이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>의존성 주입이란?</h1>\n<br/>\n<p>스프링에서 지원하는 핵심 프로그래밍 모델 중 하나로</p>\n<p>말 그대로 <strong>의존관계를 외부에서 결정</strong>해주는 디자인 패턴이다.</p>\n<p><br/><br/></p>\n<h2 id=\"의존관계\" style=\"position:relative;\"><a href=\"#%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84\" aria-label=\"의존관계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>의존관계?</h2>\n<br/>\n<p>의존관계는 쉽게 이야기하자면</p>\n<p><code class=\"language-text\">한 쪽이 변경되면 다른 한쪽도 변경되는 관계</code>로 말할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Customer</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">// 초기모델</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> id<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 고유 ID</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> grade<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 회원 등급</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">DiscountPolicy</span> discountPolicy<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 할인정책</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Customer</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">// 변경 후 모델</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> id<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> grade<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">VipDiscountPolicy</span> vipPolicy<span class=\"token punctuation\">;</span> <span class=\"token comment\">// VIP 할인정책으로 변경</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<p>고객마다 할인정책을 정의해준 초기 모델에서</p>\n<p>VIP 고객전용으로 <code class=\"language-text\">할인정책을 변경하고 싶다면</code></p>\n<p><code class=\"language-text\">생성자, Getter, Setter 등을 모두 수정해야 한다.</code></p>\n<p>(이미 다른 서비스에서도 할인율을 사용하고 있다면 더 많은 수정이 필요하다)</p>\n<br/>\n<p>이러한 관계를 Customer와 DiscountPolicy는 <u>의존관계에 있다</u>고 할 수 있다.</p>\n<br/>\n<p>하지만, <code class=\"language-text\">회원 등급은 처음부터 VIP가 아닐텐데, 나중에 결정할 수는 없는걸까?</code></p>\n<p>= 의존성을 최대한 나중에 결정할 순 없을까?</p>\n<p><br/><br/></p>\n<h2 id=\"외부에서-결정하는-의존성\" style=\"position:relative;\"><a href=\"#%EC%99%B8%EB%B6%80%EC%97%90%EC%84%9C-%EA%B2%B0%EC%A0%95%ED%95%98%EB%8A%94-%EC%9D%98%EC%A1%B4%EC%84%B1\" aria-label=\"외부에서 결정하는 의존성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>외부에서 결정하는 의존성</h2>\n<br/>\n<p>할인 정책의 행동은 이미 알고있다. 할인해주는 행동이다.</p>\n<p>VIP 할인 정책의 행동은 무엇일까? 역시 할인이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">    discountPolicy<span class=\"token punctuation\">.</span><span class=\"token function\">discount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    vipPolicy<span class=\"token punctuation\">.</span><span class=\"token function\">discount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><br/><br/></p>\n<p>각 할인 정책은 <code class=\"language-text\">같은 행동을 하기 때문에 interface로 묶을 수 있다.</code></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">    <span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> discountPolicy<span class=\"token punctuation\">{</span> <span class=\"token comment\">// 할인 정책 인터페이스는</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> <span class=\"token function\">discount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 할인을 한다.</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> normalPolicy implementation discountPolicy<span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> <span class=\"token function\">discount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0.15</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// 할인율 15</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> vipPolicy implementation discountPolicy<span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> <span class=\"token function\">discount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0.30</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// 할인율 30</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<p><br/><br/></p>\n<p>이런 식으로 interface를 통해 정의하게 되면</p>\n<p>아래와 같이 의존관계를 설정할 수 있다.</p>\n<p>이를 <code class=\"language-text\">생성자 주입 방식</code>이라고 하며, <code class=\"language-text\">Spring에서 권장하는 방법</code>이다.</p>\n<p>다른 방법들도 있지만 공식적으로 권장하지 않는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Customer</span><span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> discountPolicy discountPolicy<span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">Customer</span><span class=\"token punctuation\">(</span>discountPolicy policy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>discountPolicy <span class=\"token operator\">=</span> policy<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n        <span class=\"token class-name\">Customer</span> normal <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Customer</span><span class=\"token punctuation\">(</span>normalDiscountPolicy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Customer</span> vip <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Customer</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">VipDiscountPolicy</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<p><br/><br/></p>\n<p><code class=\"language-text\">생성자를 호출할 때 할인 정책</code>을 설정할 수 있게 되므로</p>\n<p>Customer가 생성될 때(로그인 시, 비로그인 주문 시 등등)</p>\n<p>할인 정책을 <code class=\"language-text\">결정</code>할 수 있게 된다.</p>\n<p>이게 바로 <code class=\"language-text\">의존성을 외부에서 주입한다</code>는 의미이다.</p>\n<br/>\n<h2 id=\"스프링과-di\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81%EA%B3%BC-di\" aria-label=\"스프링과 di permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스프링과 DI</h2>\n<p>실제로 스프링에서는 아래와 같이</p>\n<p>@Autowired 태그를 통해서</p>\n<p>DB 작업을 위한 repository 설정이나, Service 설정 등</p>\n<p><code class=\"language-text\">Bean 객체들을 의존성을 주입으로 사용하도록 권장</code>하고 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Service</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserService</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">UserRepository</span> userRepository<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">MemberService</span> memberService<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">UserService</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">UserRepository</span> userRepository<span class=\"token punctuation\">,</span> <span class=\"token class-name\">MemberService</span> memberService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>userRepository <span class=\"token operator\">=</span> userRepository<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>memberService <span class=\"token operator\">=</span> memberService<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n<span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<p>때문에 <code class=\"language-text\">변경이 필요한 부분은</code> 적절하게 의존성 주입이 가능하도록</p>\n<p><code class=\"language-text\">interface를 활용하여 설계하여야 한다.</code></p>\n<br/> \n<p><em>출처</em></p>\n<p><em><a href=\"https://mangkyu.tistory.com/125\">mangkyu님 블로그</a></em></p>\n<p><em><a href=\"https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81-mvc-1#\">인프런 스프링 MVC 강의 1편</a></em></p>\n<p><em><a href=\"https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81-%ED%95%B5%EC%8B%AC-%EC%9B%90%EB%A6%AC-%EA%B8%B0%EB%B3%B8%ED%8E%B8/\">인프런 스프링 핵심 원리 기본편</a></em></p>\n<br/>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84\">의존관계?</a></li>\n<li><a href=\"#%EC%99%B8%EB%B6%80%EC%97%90%EC%84%9C-%EA%B2%B0%EC%A0%95%ED%95%98%EB%8A%94-%EC%9D%98%EC%A1%B4%EC%84%B1\">외부에서 결정하는 의존성</a></li>\n<li><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81%EA%B3%BC-di\">스프링과 DI</a></li>\n</ul>\n</div>","excerpt":"지적과 댓글은 언제나 환영합니다!  의존성 주입이란? 스프링에서 지원하는 핵심 프로그래밍 모델 중 하나로 말 그대로 의존관계를 외부에서 결정해주는 디자인 패턴이다.  의존관계? 의존관계는 쉽게 이야기하자면 로 말할 수 있다. 고객마다 할인정책을 정의해준 초기 모델에서 VIP 고객전용으로   (이미 다른 서비스에서도 할인율을 사용하고 있다면 더 많은 수정이 필요하다) 이러한 관계를 Customer와 DiscountPolicy는 의존관계에 있다고 할 수 있다. 하지만,  = 의존성을 최대한 나중에 결정할 순 없을까?  외부에서 결정하는 의존성 할인 정책의 행동은 이미 알고있다. 할인해주는 행동이다. VIP 할인 정책의 행동은 무엇일까? 역시 할인이다.  각 할인 정책은   이런 식으로 interface를 통해 정의하게 되면 아래와 같이 의존관계를 설정할 수 있다. 이를 이라고 하며, 이다. 다른 방법들도 있지만 공식적으로 권장하지 않는다.  을 설정할 수 있게 되므로 Customer가…","frontmatter":{"date":"July 31, 2022","title":"스프링 의존성 주입(Dependency Injection)이란?","categories":"Spring","author":"주녘씨","emoji":"🔮"},"fields":{"slug":"/Spring-Learn-What-is-DI/"}},"next":{"id":"d05bc6a6-fb33-5124-b4aa-a04fb498d336","html":"<p>지적과 댓글은 언제나 환영합니다!</p>\n<h2 id=\"롬복lombok-이란\" style=\"position:relative;\"><a href=\"#%EB%A1%AC%EB%B3%B5lombok-%EC%9D%B4%EB%9E%80\" aria-label=\"롬복lombok 이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>롬복(Lombok) 이란?</strong></h2>\n<p>Lombok이란 어노테이션으로 코드 의존성을 줄여주는 라이브러리이다.</p>\n<p>쉽게 말해서, 변수명을 변경하면 getter/setter 등을 바꾸어줘야 한다.</p>\n<p>Lombok을 이용하면 생성자 등을 자동완성 시킬 수 있어서 쉽게 변경이 가능하다.</p>\n<p><br/><br/></p>\n<ul>\n<li>다양한 어노테이션이 있지만 기본적인 어노테이션을 먼저 알아보자</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Setter</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token class-name\">AccessLeve</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">private</span> <span class=\"token comment\">// 접근 제한 속성</span>\n\t\t<span class=\"token punctuation\">,</span> onMethod <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@Annotation</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// setter 메소드 생성시 메소드에 어노테이션 지정</span>\n\t\t<span class=\"token punctuation\">,</span> onParam <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@Annotation</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// setter 메소드 생성시 파라미터에 어노테이션 지정</span></code></pre></div>\n<p>@Data</p>\n<ul>\n<li>\n<p>@Tostring, @EqulasAndHashCode, @Getter/ @Setter, @RequiredArgsConstructor 모두 생성</p>\n</li>\n<li>\n<p>다만 생성자가 없어야 하는 경우(외부 조작 불가능) 등이 있어서 <u><strong>잘 사용하지 않는다.</strong></u></p>\n</li>\n</ul>\n<p>@Component</p>\n<ul>\n<li>\n<p>해당 클래스가 스프링에서 객체로 만들어 관리하는 대상임을 명시</p>\n</li>\n<li>\n<p>@ComponentScan을 통해 패키지의 클래스들을 검색하고,</p>\n<p>@Component가 존재하는 클래스들을 빈으로 관리</p>\n</li>\n</ul>\n<p>@Autowired</p>\n<ul>\n<li>\n<p>스프링 내부에서 자신이 특정한 객체에 의존적이므로,</p>\n<p>해당되는 타입의 빈을 주입해주라는 표시</p>\n</li>\n<li>\n<p>생성자가 하나면 @Autowired 생략 가능</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token annotation punctuation\">@ToString</span>\n<span class=\"token annotation punctuation\">@Getter</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SampleHotel</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">Chef</span> chef<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">SampleHotel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Chef</span> chef<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>chef <span class=\"token operator\">=</span> chef<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>생성자 자동주입 + LOMBOK</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token annotation punctuation\">@ToString</span>\n<span class=\"token annotation punctuation\">@Getter</span>\n<span class=\"token annotation punctuation\">@RequiredArgsConstructor</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> sampleHotel\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token annotation punctuation\">@NonNull</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">Chef</span> chef<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>@RequiredArgsConstructor : 필수로 지정된 변수만 생성자로 작성한다 → final 키워드, @NonNull</p>\n<p>@AllArgsConstructor : 모든 멤버변수를 파라미터로 받는 생성자를 작성한다.</p>\n<br/>\n<br/>\n<p>이 외에도 Controller, Service와 같이 Component를 상속받는 어노테이션,</p>\n<p>JPA관련 어노테이션 등 다양한 어노테이션이 있다.(추후 포스팅 예정!)</p>\n<p><em>출처</em></p>\n<p><em><a href=\"https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81-mvc-1#\">인프런 스프링 MVC 강의 1편</a></em></p>\n<p><em><a href=\"https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81-%ED%95%B5%EC%8B%AC-%EC%9B%90%EB%A6%AC-%EA%B8%B0%EB%B3%B8%ED%8E%B8/\">인프런 스프링 핵심 원리 기본편</a></em></p>\n<br/>\n<hr>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EB%A1%AC%EB%B3%B5lombok-%EC%9D%B4%EB%9E%80\"><strong>롬복(Lombok) 이란?</strong></a></li>\n</ul>\n</div>","frontmatter":{"date":"July 30, 2022","title":"스프링 롬복 어노테이션 정리(Lombok annotation)","categories":"Spring","author":"주녘씨","emoji":"🔮"},"fields":{"slug":"/Spring-Learn-Lombok-annotation/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://www.junwork.net","comments":{"utterances":{"repo":"junwork123/blog-comments"}}}}},"pageContext":{"slug":"/Spring-Learn-What-is-DI/","nextSlug":"/Spring-Learn-Lombok-annotation/","prevSlug":""}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}