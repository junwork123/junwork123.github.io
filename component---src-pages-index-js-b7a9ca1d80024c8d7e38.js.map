{"version":3,"file":"component---src-pages-index-js-b7a9ca1d80024c8d7e38.js","mappings":"oOA2CA,I,UCRA,MAxBA,SAAkB,GAAW,IAATA,EAAQ,EAARA,KACZC,EAAQD,EAAA,6BAAiC,gBAAGE,EAAH,cAAc,QAAd,MAC/C,EAA6BF,EAAAA,KAA7B,aAAQG,EAAR,SAAgBC,EAAhB,WACMC,EAAU,uBCdiB,SAACJ,GAClC,IAAMK,EAAc,IAApB,IAEA,OADAL,EAAAA,SAAc,gCAAoB,SAAmB,mBAAcK,EAAAA,IAAd,UAC9C,gBAAsB,cAC3B,mBAAIC,GAAkB,EACtB,aAAIC,EAAyB,EACtB,KDQqBC,CAA9B,KACMC,EAAmBL,EAAA,WAAqB,+BAAcM,KAC5D,GAAgCC,EAAAA,EAAAA,WAASF,IAAAA,EAAAA,EAAzC,GAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAmBC,EAAAA,EAAAA,cAAY,qBAAcF,EAAd,KAArC,IAEA,OACE,yBACE,qBAAKG,MAAM,SACX,qBAAKd,OAAL,EAAqBC,SAAUA,IAC/B,qBACEH,MADF,EAEEiB,SAFF,EAGEC,KAHF,EAIEN,SAJF,EAKEO,gBAAc,IAEhB,4BAXJ","sources":["webpack://blog.junwork.net/./src/components/init/index.js","webpack://blog.junwork.net/./src/pages/index.js","webpack://blog.junwork.net/./src/utils/helpers.js"],"sourcesContent":["import React from \"react\";\nimport { useScript } from \"../hooks\"\n\nfunction kakaoInit() {\n        \n    // kakao SDK import하기\n    const status = useScript(\"https://developers.kakao.com/sdk/js/kakao.js\");\n    //kakao sdk 초기화하기\n    //status가 변경될 때마다 실행되며, status가 ready일 때 초기화를 시도합니다.\n    useEffect(() => {\n        if (status === \"ready\" && window.Kakao) {\n            // 중복 initialization 방지\n            if (!window.Kakao.isInitialized()) {\n                // 두번째 step 에서 가져온 javascript key 를 이용하여 initialize\n                window.Kakao.init(\"d18de93c160aeef56c4f7521dbcb93b1\");\n            }\n        }\n    }, [status]);\t\n\n    // useEffect(() => {\n    //   initKakao(); //\n    //   url = window.location.pathname;\n    //   console.log(url);\n    // }, []);\n\n    //자바스크립트키로 카카오 init\n    // const initKakao = () => {\n    //   if (window.Kakao) {\n    //     const kakao = window.Kakao;\n    //     const kakaoKey = process.env.REACT_APP_KAKAO_SHARE_KEY;\n    //     if (!kakao.isInitialized()) {\n    //       console.log(key);\n    //       console.log(kakaoKey);\n    //       kakao.init(kakaoKey);\n    //       kakao.init(key);\n    //     }\n    //   }   \n    // };\n\n    return <script src=\"https://developers.kakao.com/sdk/js/kakao.js\"></script>;\n    \n}\n\nexport default kakaoInit;","import React, { useCallback, useState, useEffect } from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../layout';\nimport Seo from '../components/seo';\nimport Bio from '../components/bio';\nimport Post from '../models/post';\nimport kakaoInit from '../components/init';\n\nimport { getUniqueCategories } from '../utils/helpers';\nimport PostTabs from '../components/post-tabs';\n\nfunction HomePage({ data }) {\n  const posts = data.allMarkdownRemark.edges.map(({ node }) => new Post(node));\n  const { author, language } = data.site.siteMetadata;\n  const categories = ['All', ...getUniqueCategories(posts)];\n  const featuredTabIndex = categories.findIndex((category) => category === 'featured');\n  const [tabIndex, setTabIndex] = useState(featuredTabIndex === -1 ? 0 : featuredTabIndex);\n  const onTabIndexChange = useCallback((e, value) => setTabIndex(value), []);\n\n  return (\n    <Layout>\n      <Seo title=\"Home\" />\n      <Bio author={author} language={language} />\n      <PostTabs\n        posts={posts}\n        onChange={onTabIndexChange}\n        tabs={categories}\n        tabIndex={tabIndex}\n        showMoreButton\n      />\n      <kakaoInit/>\n    </Layout>\n  );\n}\n\nexport default HomePage;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 200, truncate: true)\n          frontmatter {\n            categories\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n\n    site {\n      siteMetadata {\n        language\n        author {\n          name\n          bio {\n            role\n            description\n            thumbnail\n          }\n          social {\n            github\n            linkedIn\n            email\n          }\n        }\n      }\n    }\n  }\n`;\n","export const getUniqueCategories = (posts) => {\n  const categorySet = new Set();\n  posts.forEach(({ categories }) => categories.forEach((category) => categorySet.add(category)));\n  return [...categorySet].sort((a, b) => {\n    if (a === 'featured') return -1;\n    if (b === 'featured') return 1;\n    return 0;\n  });\n};\n"],"names":["data","posts","node","author","language","categories","categorySet","a","b","getUniqueCategories","featuredTabIndex","category","useState","tabIndex","setTabIndex","onTabIndexChange","useCallback","title","onChange","tabs","showMoreButton"],"sourceRoot":""}